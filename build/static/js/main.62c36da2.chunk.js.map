{"version":3,"sources":["layouts/Main/components/Topbar/notification.mp3","serviceWorker.js","helpers/chartjs.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","common/validators.js","components/SearchInput/SearchInput.js","components/StatusBullet/StatusBullet.js","components/RouteWithLayout/RouteWithLayout.js","components/Backdrop/Backdrop.js","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","layouts/Minimal/components/Topbar/Topbar.js","layouts/Minimal/Minimal.js","views/Account/components/AccountDetails/AccountDetails.js","views/Account/components/AccountProfile/AccountProfile.js","views/Account/Account.js","views/Dashboard/components/Budget/Budget.js","views/Dashboard/Dashboard.js","views/Dashboard/components/LatestOrders/data.js","views/Dashboard/components/LatestOrders/LatestOrders.js","views/Dashboard/components/LatestProducts/data.js","views/Dashboard/components/LatestProducts/LatestProducts.js","views/Dashboard/components/LatestSales/chart.js","views/Dashboard/components/LatestSales/LatestSales.js","views/Dashboard/components/TasksProgress/TasksProgress.js","views/Dashboard/components/TotalProfit/TotalProfit.js","views/Dashboard/components/TotalUsers/TotalUsers.js","views/Dashboard/components/UsersByDevice/UsersByDevice.js","views/NotFound/NotFound.js","views/Icons/Icons.js","views/ProductList/components/ProductCard/ProductCard.js","views/ProductList/components/ProductsToolbar/ProductsToolbar.js","views/ProductList/data.js","views/ProductList/ProductList.js","views/Settings/components/Notifications/Notifications.js","views/Settings/components/Password/Password.js","views/Settings/Settings.js","icons/Facebook/index.js","icons/Google/index.js","views/SignIn/SignIn.js","views/SignUp/SignUp.js","views/Typography/Typography.js","views/UserList/components/UsersTable/UsersTable.js","views/UserList/components/UsersToolbar/UsersToolbar.js","views/UserList/data.js","views/UserList/UserList.js","components/Dialog/Dialog.js","views/Customers/components/Form/UserForm.js","views/Customers/components/UsersTable/UsersTable.js","views/Customers/components/UsersToolbar/UsersToolbar.js","views/Customers/UserList.js","common/variables/constants.js","views/ComparePrices/components/Form/UserForm.js","views/ComparePrices/components/UsersTable/UsersTable.js","views/ComparePrices/components/UsersToolbar/UsersToolbar.js","views/ComparePrices/UserList.js","views/Gas/components/Form/UserForm.js","views/Gas/components/UsersTable/UsersTable.js","views/Gas/components/UsersToolbar/UsersToolbar.js","views/Gas/UserList.js","views/ServiceFee/components/Form/UserForm.js","views/ServiceFee/components/UsersTable/UsersTable.js","views/ServiceFee/components/UsersToolbar/UsersToolbar.js","views/ServiceFee/UserList.js","views/DeliveryFee/components/Form/UserForm.js","views/DeliveryFee/components/UsersTable/UsersTable.js","views/DeliveryFee/components/UsersToolbar/UsersToolbar.js","views/DeliveryFee/UserList.js","views/Orders/components/Form/UserForm.js","views/Orders/components/UsersTable/UsersTable.js","views/Orders/components/UsersToolbar/UsersToolbar.js","views/Orders/UserList.js","Routes.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","green","info","warning","orange","error","red","text","blueGrey","link","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiButton","contained","boxShadow","MuiIconButton","root","MuiPaper","elevation1","MuiTableCell","typography","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","zIndex","appBar","drawer","checked","value","message","useStyles","makeStyles","borderRadius","alignItems","padding","spacing","display","flexBasis","marginRight","input","flexGrow","SearchInput","props","className","onChange","style","rest","classes","Paper","clsx","Input","disableUnderline","flexShrink","sm","md","lg","neutral","danger","StatusBullet","size","defaultProps","RouteWithLayout","Layout","layout","Component","component","render","matchProps","backdrop","SimpleBackdrop","Backdrop","open","CircularProgress","Footer","variant","Link","href","target","Date","getFullYear","flexDirection","minHeight","avatar","name","marginTop","Profile","user","Avatar","alt","RouterLink","src","to","item","paddingTop","paddingBottom","justifyContent","fontWeightMedium","button2","active","iconExpand","position","CustomRouterLink","forwardRef","ref","SidebarNav","pages","React","useState","setOpen","List","map","page","child","Fragment","ListItem","disableGutters","key","title","Button","activeClassName","onClick","margin","Collapse","in","timeout","unmountOnExit","e","media","textAlign","content","actions","breakpoints","up","nav","Sidebar","onClose","Drawer","anchor","Divider","signOutButton","marginLeft","Topbar","onSidebarOpen","useEffect","notify","a","audio","Audio","require","messaging","firebase","Notification","requestPermission","getToken","then","currentToken","console","log","catch","err","onMessage","payload","play","setNotification","onTokenRefresh","newToken","notifications","AppBar","Toolbar","Hidden","mdDown","IconButton","alert","Badge","badgeContent","length","lgUp","shiftContent","paddingLeft","Main","children","useTheme","isDesktop","useMediaQuery","defaultMatches","openSidebar","setOpenSidebar","shouldOpenSidebar","Minimal","details","progress","uploadButton","difference","differenceIcon","differenceValue","uuid","inner","minWidth","statusContainer","status","moment","subtract","image","chartContainer","stats","device","deviceIcon","Dashboard","Grid","container","xl","xs","fontFamily","iframe","border","maxWidth","NotFound","justify","imageContainer","overflow","statsItem","statsIcon","row","spacer","importButton","exportButton","searchInput","pagination","Facebook","SvgIcon","d","Google","schema","email","presence","allowEmpty","maximum","password","grid","quoteContainer","down","quote","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","quoteInner","quoteText","bio","contentContainer","contentHeader","paddingBototm","paddingRight","logoImage","contentBody","form","socialButtons","socialIcon","sugestion","textField","signInButton","withRouter","history","isValid","values","touched","errors","formState","setFormState","validate","handleChange","event","persist","type","handleSignIn","preventDefault","push","hasError","field","person","goBack","onSubmit","align","TextField","fullWidth","helperText","label","disabled","firstName","lastName","policy","policyCheckbox","signUpButton","Checkbox","policyText","underline","FormHelperText","nameContainer","texth2","body","ResponsiveDialog","fullScreen","handleClick","Dialog","handleCancel","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","cancelText","handleOk","okText","AddEditUser","UsersTable","users","rowsPerPage","setPage","Card","CardContent","Table","TableHead","TableRow","TableCell","TableBody","slice","tableRow","hover","phone","dateJoin","toDate","format","CardActions","TablePagination","count","onChangePage","pagee","get","rowsPerPageOptions","UsersToolbar","setValue","openForm","setOpenForm","placeholder","undefined","UserList","setUsers","getCustomerData","search","datadb","collection","limit","orderBy","startAt","data","arr","forEach","doc","toLowerCase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","randomId","s4","random","toString","substring","gasName","setGasName","octRating","setOctRating","price","setprice","prices","setprices","zipCode","setZipCode","clearForm","octaneRating","modal","fn","set","toUpperCase","close","selectedUsers","setSelectedUsers","delete","zipCodes","fullPrice","setFullPrice","halfPrice","setHalfPrice","description","setDescription","isZip","setIsZip","Switch","inputProps","rating","update","totalAmount","orderDetails","FormattedAddress","gasDetails","gasType","gasAmount","make","model","year","plateNumber","deliveryDate","timeStart","timeEnd","latitude","longitude","userDetail","Routes","exact","from","DashboardView","MainLayout","path","CustomerView","GasTypesView","OrdersView","ComparePricesView","DeliveryFeeView","ServiceFeeView","SignUpView","MinimalLayout","SignInView","NotFoundView","browserHistory","createBrowserHistory","Chart","helpers","extend","elements","Rectangle","prototype","chartjs","validators","App","ThemeProvider","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","register","scope"],"mappings":"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","file":"static/js/main.62c36da2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notification.60145df2.mp3\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\nexport const registerServiceWorker = () => {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker\n      .register('firebase-messaging-sw.js')\n      .then(function (registration) {\n        // eslint-disable-next-line no-console\n        console.log('[SW]: SCOPE: ', registration.scope);\n        return registration.scope;\n      })\n      .catch(function (err) {\n        return err;\n      });\n  }\n};\n","// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft =\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight =\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom =\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nexport default {\n  draw\n};\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: 'white',\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","const checked = (value, options) => {\n  if (value !== true) {\n    return options.message || 'must be checked';\n  }\n};\n\nexport default {\n  checked\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderRadius: '4px',\n    alignItems: 'center',\n    padding: theme.spacing(1),\n    display: 'flex',\n    flexBasis: 420\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary\n  },\n  input: {\n    flexGrow: 1,\n    fontSize: '14px',\n    lineHeight: '16px',\n    letterSpacing: '-0.05px'\n  }\n}));\n\nconst SearchInput = props => {\n  const { className, onChange, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Paper\n      {...rest}\n      className={clsx(classes.root, className)}\n      style={style}\n    >\n      <SearchIcon className={classes.icon} />\n      <Input\n        {...rest}\n        className={classes.input}\n        disableUnderline\n        onChange={onChange}\n      />\n    </Paper>\n  );\n};\n\nSearchInput.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  style: PropTypes.object\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-block',\n    borderRadius: '50%',\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  sm: {\n    height: theme.spacing(1),\n    width: theme.spacing(1)\n  },\n  md: {\n    height: theme.spacing(2),\n    width: theme.spacing(2)\n  },\n  lg: {\n    height: theme.spacing(3),\n    width: theme.spacing(3)\n  },\n  neutral: {\n    backgroundColor: theme.palette.neutral\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.main\n  },\n  info: {\n    backgroundColor: theme.palette.info.main\n  },\n  warning: {\n    backgroundColor: theme.palette.warning.main\n  },\n  danger: {\n    backgroundColor: theme.palette.error.main\n  },\n  success: {\n    backgroundColor: theme.palette.success.main\n  }\n}));\n\nconst StatusBullet = props => {\n  const { className, size, color, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <span\n      {...rest}\n      className={clsx(\n        {\n          [classes.root]: true,\n          [classes[size]]: size,\n          [classes[color]]: color\n        },\n        className\n      )}\n    />\n  );\n};\n\nStatusBullet.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'neutral',\n    'primary',\n    'info',\n    'success',\n    'warning',\n    'danger'\n  ]),\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\n};\n\nStatusBullet.defaultProps = {\n  size: 'md',\n  color: 'default'\n};\n\nexport default StatusBullet;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouteWithLayout = props => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\n\nexport default RouteWithLayout;\n","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1000000,\n    color: '#fff',\n  },\n}));\n\nexport default function SimpleBackdrop(props) {\n  const classes = useStyles();\n\n\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={props.open} //onClick={handleClose}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Footer = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography variant=\"body1\">\n        &copy;{' '}\n        <Link\n          component=\"a\"\n          href=\"https://#/\"\n          target=\"_blank\"\n        >\n          FUELUP \n        </Link>\n        . {new Date().getFullYear()}\n      </Typography>\n      <Typography variant=\"caption\">\n        Created with love for the environment. By Ameer Hamza\n      </Typography>\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: 'fit-content'\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Profile = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const user = {\n    name: 'Admin',\n    avatar: 'https://image.flaticon.com/icons/png/512/17/17004.png',\n    bio: 'FUELUP BUSINESS DASHBOARD'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Avatar\n        alt=\"Person\"\n        className={classes.avatar}\n        component={RouterLink}\n        src={user.avatar}\n        to=\"/settings\"\n      />\n      <Typography\n        className={classes.name}\n        variant=\"h4\"\n      >\n        {user.name}\n      </Typography>\n      <Typography variant=\"body2\">{user.bio}</Typography>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, ListItem, Button, colors } from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  button2: {\n    color: colors.blueGrey[800],\n    padding: '10px 18px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  },\n  iconExpand: {\n    position: 'absolute',\n    right: '0px'\n  }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div ref={ref} style={{ flexGrow: 1 }}>\n    <RouterLink {...props} />\n  </div>\n));\n\nconst SidebarNav = props => {\n  const { pages, className, ...rest } = props;\n  const [open, setOpen] = React.useState(true);\n\n  const classes = useStyles();\n\n  return (\n    <List {...rest} className={clsx(classes.root, className)}>\n      {pages.map(page => {\n        return page.child ? (\n          <React.Fragment>\n            <ListItem\n              className={classes.item}\n              disableGutters\n              key={page.title}\n              button>\n              <Button\n                activeClassName={classes.active}\n                className={classes.button}\n                component={CustomRouterLink}\n                to={page.child[0].href}\n                onClick={() => setOpen(!open)}\n                style={{\n                  margin: 'auto'\n                }}>\n                <div className={classes.icon}>{page.icon}</div>\n                {page.title}\n                {open ? (\n                  <ExpandLess className={classes.iconExpand} />\n                ) : (\n                  <ExpandMore className={classes.iconExpand} />\n                )}\n              </Button>\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              {page.child.map(e => (\n                <React.Fragment>\n                  <Button\n                    activeClassName={classes.active}\n                    className={classes.button2}\n                    component={CustomRouterLink}\n                    to={e.href}\n                    style={{\n                      margin: 'auto'\n                    }}>\n                    <div className={classes.icon}>{e.icon}</div>\n                    {e.title}\n                  </Button>\n                </React.Fragment>\n              ))}\n            </Collapse>\n          </React.Fragment>\n        ) : (\n          <ListItem className={classes.item} disableGutters key={page.title}>\n            {/* <ListItemIcon>\n              <div className={classes.icon}>{page.icon}</div>\n            </ListItemIcon>\n            <ListItemText primary={page.title} /> */}\n            <Button\n              activeClassName={classes.active}\n              className={classes.button}\n              component={CustomRouterLink}\n              to={page.href}\n              style={{\n                margin: 'auto'\n              }}>\n              <div className={classes.icon}>{page.icon}</div>\n              {page.title}\n            </Button>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\n\nexport default SidebarNav;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, Drawer } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport ShopOutlined from '@material-ui/icons/ShopOutlined';\nimport MoneyOff from '@material-ui/icons/MoneyOff';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport LockOpenIcon from '@material-ui/icons/LocalGasStation';\n\nimport { Profile, SidebarNav, UpgradePlan } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 240,\n    [theme.breakpoints.up('lg')]: {\n      marginTop: 64,\n      height: 'calc(100% - 64px)'\n    }\n  },\n  root: {\n    backgroundColor: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    padding: theme.spacing(2)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  nav: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Sidebar = props => {\n  const { open, variant, onClose, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const pages = [\n    // {\n    //   title: 'Dashboard',\n    //   href: '/dashboard',\n    //   icon: <DashboardIcon />\n    // },\n    {\n      title: 'Orders',\n      href: '/orders',\n      icon: <ShopOutlined />\n    },\n    {\n      title: 'Customers',\n      href: '/customers',\n      icon: <PeopleIcon />\n    },\n    \n    {\n      title: 'Setup',\n      // href: '/dashboard',\n      icon: <SettingsIcon />,\n      child:[\n        {\n          title: 'Gas',\n          href: '/gas',\n          icon: <LockOpenIcon />\n        },\n        {\n          title: 'Compare Price',\n          href: '/price',\n          icon: <MoneyOff />\n        },\n        {\n          title: 'Delivery Fee',\n          href: '/delivery-fee',\n          icon: <MoneyOff />\n        },\n        {\n          title: 'Service Fee',\n          href: '/service-fee',\n          icon: <MoneyOff />\n        },\n      ]\n    },\n \n\n    // {\n    //   title: 'Users',\n    //   href: '/users',\n    //   icon: <PeopleIcon />\n    // },\n    // {\n    //   title: 'Products',\n    //   href: '/products',\n    //   icon: <ShoppingBasketIcon />\n    // },\n    // {\n    //   title: 'Authentication',\n    //   href: '/sign-in',\n    //   icon: <LockOpenIcon />\n    // },\n    // {\n    //   title: 'Typography',\n    //   href: '/typography',\n    //   icon: <TextFieldsIcon />\n    // },\n    // {\n    //   title: 'Icons',\n    //   href: '/icons',\n    //   icon: <ImageIcon />\n    // },\n    // {\n    //   title: 'Account',\n    //   href: '/account',\n    //   icon: <AccountBoxIcon />\n    // },\n    // {\n    //   title: 'Settings',\n    //   href: '/settings',\n    //   icon: <SettingsIcon />\n    // }\n  ];\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant={variant}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <Profile />\n        <Divider className={classes.divider} />\n        <SidebarNav\n          className={classes.nav}\n          pages={pages}\n        />\n        {/* <UpgradePlan /> */}\n      </div>\n    </Drawer>\n  );\n};\n\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  variant: PropTypes.string.isRequired\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: colors.grey[50]\n  },\n  media: {\n    paddingTop: theme.spacing(2),\n    height: 80,\n    textAlign: 'center',\n    '& > img': {\n      height: '100%',\n      width: 'auto'\n    }\n  },\n  content: {\n    padding: theme.spacing(1, 2)\n  },\n  actions: {\n    padding: theme.spacing(1, 2),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst UpgradePlan = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.media}>\n        <img\n          alt=\"Upgrade to PRO\"\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\n        />\n      </div>\n      <div className={classes.content}>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h6\"\n        >\n          Upgrade to PRO\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n        >\n          Upgrade to Devias Kit PRO and get even more components\n        </Typography>\n      </div>\n      <div className={classes.actions}>\n        <Button\n          color=\"primary\"\n          component=\"a\"\n          href=\"https://devias.io/products/devias-kit-pro\"\n          variant=\"contained\"\n        >\n          Upgrade\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nUpgradePlan.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UpgradePlan;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Badge, Hidden, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport * as firebase from 'firebase'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none',\n    backgroundColor: '#FF276D'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  signOutButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Topbar = props => {\n  const { className, onSidebarOpen, ...rest } = props;\n\n  const classes = useStyles();\n  React.useEffect(() => {\n    notify();\n  }, []);\n\n  let notify = async () => {\n    var audio = new Audio(require('./notification.mp3'));\n    const messaging = firebase.messaging();\n\n    await Notification.requestPermission();\n\n    messaging\n      .getToken()\n      .then(currentToken => {\n        if (currentToken) {\n          console.log(currentToken);\n\n          // sendTokenToServer(currentToken);\n          // updateUIForPushEnabled(currentToken);\n        } else {\n          // Show permission request.\n          console.log(\n            'No Instance ID token available. Request permission to generate one.'\n          );\n          // Show permission UI.\n          // updateUIForPushPermissionRequired();\n          // setTokenSentToServer(false);\n        }\n      })\n      .catch(err => {\n        console.log('An error occurred while retrieving token. ', err);\n        // showToken('Error retrieving Instance ID token. ', err);\n        // setTokenSentToServer(false);\n      });\n\n    messaging.onMessage(payload => {\n      console.log('App.js', payload);\n      audio.play();\n      setNotification(1)\n    });\n\n    messaging.onTokenRefresh(newToken => {\n      messaging\n        .getToken()\n        .then(currentToken => {\n          if (currentToken) {\n            console.log(currentToken);\n\n            // sendTokenToServer(currentToken);\n            // updateUIForPushEnabled(currentToken);\n          } else {\n            // Show permission request.\n            console.log(\n              'No Instance ID token available. Request permission to generate one.'\n            );\n            // Show permission UI.\n            // updateUIForPushPermissionRequired();\n            // setTokenSentToServer(false);\n          }\n        })\n        .catch(err => {\n          console.log('An error occurred while retrieving token. ', err);\n          // showToken('Error retrieving Instance ID token. ', err);\n          // setTokenSentToServer(false);\n        });\n    });\n    // messaging.setBackgroundMessageHandler(payload => {\n    //   console.log('App.js', payload);\n    //   audio.play();\n    // });\n  };\n\n  const [notifications, setNotification] = useState([]);\n\n  return (\n    <AppBar {...rest} className={clsx(classes.root, className)}>\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            width={'auto'}\n            height={40}\n            src=\"/images/logos/floatsta.png\"\n          />\n        </RouterLink>\n        <div className={classes.flexGrow} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\"\n            onClick={()=>{\n              \n              setNotification([])\n              alert('Please Check Orders, Time is short')\n            }}\n          >\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton className={classes.signOutButton} color=\"inherit\">\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton color=\"inherit\" onClick={onSidebarOpen}>\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  onSidebarOpen: PropTypes.func\n};\n\nexport default Topbar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\n\nimport { Sidebar, Topbar, Footer } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 56,\n    height: '100%',\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 64\n    }\n  },\n  shiftContent: {\n    paddingLeft: 240\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Main = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const [openSidebar, setOpenSidebar] = useState(false);\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n\n  return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n        [classes.shiftContent]: isDesktop\n      })}\n    >\n      <Topbar onSidebarOpen={handleSidebarOpen} />\n      <Sidebar\n        onClose={handleSidebarClose}\n        open={shouldOpenSidebar}\n        variant={isDesktop ? 'persistent' : 'temporary'}\n      />\n      <main className={classes.content}>\n        {children}\n        <Footer />\n      </main>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    boxShadow: 'none',\n    backgroundColor: '#02c9ce'\n\n  }\n}));\n\nconst Topbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n      position=\"fixed\"\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            width={'auto'}\n            height={40}\n            src=\"/images/logos/floatsta.png\"\n          />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Topbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Topbar } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingTop: 64,\n    height: '100%'\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Minimal = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Topbar />\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nMinimal.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default Minimal;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst AccountDetails = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    firstName: 'Shen',\n    lastName: 'Zhi',\n    email: 'shen.zhi@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  });\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const states = [\n    {\n      value: 'alabama',\n      label: 'Alabama'\n    },\n    {\n      value: 'new-york',\n      label: 'New York'\n    },\n    {\n      value: 'san-francisco',\n      label: 'San Francisco'\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form\n        autoComplete=\"off\"\n        noValidate\n      >\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                margin=\"dense\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                margin=\"dense\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                margin=\"dense\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                margin=\"dense\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                margin=\"dense\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map(option => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                margin=\"dense\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nAccountDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AccountDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Typography,\n  Divider,\n  Button,\n  LinearProgress\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: 'flex'\n  },\n  avatar: {\n    marginLeft: 'auto',\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst AccountProfile = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const user = {\n    name: 'Shen Zhi',\n    city: 'Los Angeles',\n    country: 'USA',\n    timezone: 'GTM-7',\n    avatar: '/images/avatars/avatar_11.png'\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <div className={classes.details}>\n          <div>\n            <Typography\n              gutterBottom\n              variant=\"h2\"\n            >\n              John Doe\n            </Typography>\n            <Typography\n              className={classes.locationText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {user.city}, {user.country}\n            </Typography>\n            <Typography\n              className={classes.dateText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {moment().format('hh:mm A')} ({user.timezone})\n            </Typography>\n          </div>\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n        </div>\n        <div className={classes.progress}>\n          <Typography variant=\"body1\">Profile Completeness: 70%</Typography>\n          <LinearProgress\n            value={70}\n            variant=\"determinate\"\n          />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.uploadButton}\n          color=\"primary\"\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n        <Button variant=\"text\">Remove picture</Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AccountProfile;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport { AccountProfile, AccountDetails } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Account = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={4}\n          md={6}\n          xl={4}\n          xs={12}\n        >\n          <AccountProfile />\n        </Grid>\n        <Grid\n          item\n          lg={8}\n          md={6}\n          xl={8}\n          xs={12}\n        >\n          <AccountDetails />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Account;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.error.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.error.dark\n  },\n  differenceValue: {\n    color: theme.palette.error.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Budget = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TOTAL FUNDS\n            </Typography>\n            <Typography variant=\"h3\">$24,000</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <MoneyIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        {/* <div className={classes.difference}>\n          <ArrowDownwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            12%\n          </Typography>\n          <Typography\n            className={classes.caption}\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </div> */}\n      </CardContent>\n    </Card>\n  );\n};\n\nBudget.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Budget;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport {\n  Budget,\n  TotalUsers,\n  TasksProgress,\n  TotalProfit,\n  LatestSales,\n  UsersByDevice,\n  LatestProducts,\n  LatestOrders\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item lg={8} sm={8} xl={8} xs={12}\n          style={{\n            fontSize: 30,\n            fontWeight: 'bold',\n            fontFamily: 'Roboto',\n            textAlign: 'center',\n            minHeight: 300\n          }}\n        >\n          Welcome to Fuel Up orders Management Sytems!\n        </Grid>\n      </Grid>\n      {/* <Grid\n        container\n        spacing={4}\n      >\n         <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n          <Budget />\n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n          <TotalUsers />\n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n          <TotalUsers driver />\n           <TasksProgress /> \n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n         \n        </Grid>\n        <Grid\n          item\n          lg={8}\n          md={12}\n          xl={9}\n          xs={12}\n        >\n          <LatestSales />\n        </Grid>\n        <Grid\n          item\n          lg={4}\n          md={6}\n          xl={3}\n          xs={12}\n        >\n          <UsersByDevice />\n        </Grid>\n         <Grid\n          item\n          lg={4}\n          md={6}\n          xl={3}\n          xs={12}\n        >\n          <LatestProducts />\n        </Grid>\n        <Grid\n          item\n          lg={8}\n          md={12}\n          xl={9}\n          xs={12}\n        >\n          <LatestOrders />\n        </Grid> \n      </Grid> */}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import uuid from 'uuid/v1';\n\nexport default [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    createdAt: 1555016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    customer: {\n      name: 'Cao Yu'\n    },\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    customer: {\n      name: 'Anje Keizer'\n    },\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    customer: {\n      name: 'Adam Denisov'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  }\n];\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport mockData from './data';\nimport { StatusBullet } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 800\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refunded: 'danger'\n};\n\nconst LatestOrders = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [orders] = useState(mockData);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            variant=\"outlined\"\n          >\n            New entry\n          </Button>\n        }\n        title=\"Latest Orders\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Order Ref</TableCell>\n                  <TableCell>Customer</TableCell>\n                  <TableCell sortDirection=\"desc\">\n                    <Tooltip\n                      enterDelay={300}\n                      title=\"Sort\"\n                    >\n                      <TableSortLabel\n                        active\n                        direction=\"desc\"\n                      >\n                        Date\n                      </TableSortLabel>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell>Status</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {orders.map(order => (\n                  <TableRow\n                    hover\n                    key={order.id}\n                  >\n                    <TableCell>{order.ref}</TableCell>\n                    <TableCell>{order.customer.name}</TableCell>\n                    <TableCell>\n                      {moment(order.createdAt).format('DD/MM/YYYY')}\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.statusContainer}>\n                        <StatusBullet\n                          className={classes.status}\n                          color={statusColors[order.status]}\n                          size=\"sm\"\n                        />\n                        {order.status}\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import uuid from 'uuid/v1';\nimport moment from 'moment';\n\nexport default [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  IconButton\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport mockData from './data';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    padding: 0\n  },\n  image: {\n    height: 48,\n    width: 48\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestProducts = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [products] = useState(mockData);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        subtitle={`${products.length} in total`}\n        title=\"Latest products\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <List>\n          {products.map((product, i) => (\n            <ListItem\n              divider={i < products.length - 1}\n              key={product.id}\n            >\n              <ListItemAvatar>\n                <img\n                  alt=\"Product\"\n                  className={classes.image}\n                  src={product.imageUrl}\n                />\n              </ListItemAvatar>\n              <ListItemText\n                primary={product.name}\n                secondary={`Updated ${product.updatedAt.fromNow()}`}\n              />\n              <IconButton\n                edge=\"end\"\n                size=\"small\"\n              >\n                <MoreVertIcon />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProducts;\n","import palette from 'theme/palette';\n\nexport const data = {\n  labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug'],\n  datasets: [\n    {\n      label: 'This year',\n      backgroundColor: palette.primary.main,\n      data: [18, 5, 19, 27, 29, 19, 20]\n    },\n    {\n      label: 'Last year',\n      backgroundColor: palette.neutral,\n      data: [11, 20, 12, 29, 30, 25, 13]\n    }\n  ]\n};\n\nexport const options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: false,\n  legend: { display: false },\n  cornerRadius: 20,\n  tooltips: {\n    enabled: true,\n    mode: 'index',\n    intersect: false,\n    borderWidth: 1,\n    borderColor: palette.divider,\n    backgroundColor: palette.white,\n    titleFontColor: palette.text.primary,\n    bodyFontColor: palette.text.secondary,\n    footerFontColor: palette.text.secondary\n  },\n  layout: { padding: 0 },\n  scales: {\n    xAxes: [\n      {\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5,\n        ticks: {\n          fontColor: palette.text.secondary\n        },\n        gridLines: {\n          display: false,\n          drawBorder: false\n        }\n      }\n    ],\n    yAxes: [\n      {\n        ticks: {\n          fontColor: palette.text.secondary,\n          beginAtZero: true,\n          min: 0\n        },\n        gridLines: {\n          borderDash: [2],\n          borderDashOffset: [2],\n          color: palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [2],\n          zeroLineBorderDashOffset: [2],\n          zeroLineColor: palette.divider\n        }\n      }\n    ]\n  }\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport { data, options } from './chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chartContainer: {\n    height: 400,\n    position: 'relative'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestSales = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader\n        action={\n          <Button size=\"small\" variant=\"text\">\n            Last 7 days <ArrowDropDownIcon />\n          </Button>\n        }\n        title=\"Latest Rides Revenue\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Bar data={data} options={options} />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button color=\"primary\" size=\"small\" variant=\"text\">\n          Overview <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLatestSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestSales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Avatar,\n  LinearProgress\n} from '@material-ui/core';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  progress: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst TasksProgress = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TASKS PROGRESS\n            </Typography>\n            <Typography variant=\"h3\">75.5%</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <InsertChartIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <LinearProgress\n          className={classes.progress}\n          value={75.5}\n          variant=\"determinate\"\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nTasksProgress.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TasksProgress;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.white,\n    color: theme.palette.primary.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst TotalProfit = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"inherit\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TOTAL PROFIT\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"h3\"\n            >\n              $23,200\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AttachMoneyIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.success.dark\n  },\n  differenceValue: {\n    color: theme.palette.success.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalUsers = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              TOTAL {props.driver ? 'PENDING ORDERS' : 'CUSTOMERS'}\n            </Typography>\n            <Typography variant=\"h3\">1,600</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        {/* <div className={classes.difference}>\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            16%\n          </Typography>\n          <Typography\n            className={classes.caption}\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </div> */}\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalUsers.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalUsers;\n","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst UsersByDevice = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          theme.palette.primary.main,\n          theme.palette.error.main,\n          theme.palette.warning.main\n        ],\n        borderWidth: 8,\n        borderColor: theme.palette.white,\n        hoverBorderColor: theme.palette.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: '63',\n      icon: <LaptopMacIcon />,\n      color: theme.palette.primary.main\n    },\n    {\n      title: 'Tablet',\n      value: '15',\n      icon: <TabletMacIcon />,\n      color: theme.palette.error.main\n    },\n    {\n      title: 'Mobile',\n      value: '23',\n      icon: <PhoneIphoneIcon />,\n      color: theme.palette.warning.main\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <IconButton size=\"small\">\n            <RefreshIcon />\n          </IconButton>\n        }\n        title=\"Users By Device\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </div>\n        <div className={classes.stats}>\n          {devices.map(device => (\n            <div\n              className={classes.device}\n              key={device.title}\n            >\n              <span className={classes.deviceIcon}>{device.icon}</span>\n              <Typography variant=\"body1\">{device.title}</Typography>\n              <Typography\n                style={{ color: device.color }}\n                variant=\"h2\"\n              >\n                {device.value}%\n              </Typography>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nUsersByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersByDevice;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  content: {\n    paddingTop: 150,\n    textAlign: 'center'\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFound = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        justify=\"center\"\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={6}\n          xs={12}\n        >\n          <div className={classes.content}>\n            <Typography variant=\"h1\">\n              404: The page you are looking for isn’t here\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              You either tried some shady route or you came here by mistake.\n              Whichever it is, try using the navigation\n            </Typography>\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/images/undraw_page_not_found_su7k.svg\"\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  iframe: {\n    width: '100%',\n    minHeight: 640,\n    border: 0\n  }\n}));\n\nconst Icons = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <iframe\n        className={classes.iframe}\n        src=\"https://material.io/tools/icons/?icon=accessibility&style=outline\"\n        title=\"Material Design icons\"\n      />\n    </div>\n  );\n};\n\nexport default Icons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  imageContainer: {\n    height: 64,\n    width: 64,\n    margin: '0 auto',\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: '5px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    width: '100%'\n  },\n  statsItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  statsIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = props => {\n  const { className, product, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <div className={classes.imageContainer}>\n          <img\n            alt=\"Product\"\n            className={classes.image}\n            src={product.imageUrl}\n          />\n        </div>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {product.title}\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body1\"\n        >\n          {product.description}\n        </Typography>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <AccessTimeIcon className={classes.statsIcon} />\n            <Typography\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              Updated 2hr ago\n            </Typography>\n          </Grid>\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <GetAppIcon className={classes.statsIcon} />\n            <Typography\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              {product.totalDownloads} Downloads\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductsToolbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.row}>\n        <span className={classes.spacer} />\n        <Button className={classes.importButton}>Import</Button>\n        <Button className={classes.exportButton}>Export</Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add product\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Search product\"\n        />\n      </div>\n    </div>\n  );\n};\n\nProductsToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProductsToolbar;\n","import uuid from 'uuid/v1';\n\nexport default [\n  {\n    id: uuid(),\n    title: 'Dropbox',\n    description:\n      'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\n    imageUrl: '/images/products/product_1.png',\n    totalDownloads: '594',\n    updatedAt: '27/03/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Medium Corporation',\n    description:\n      'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\n    imageUrl: '/images/products/product_2.png',\n    totalDownloads: '625',\n    createdAt: '31/03/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Slack',\n    description:\n      'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\n    imageUrl: '/images/products/product_3.png',\n    totalDownloads: '857',\n    createdAt: '03/04/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Lyft',\n    description:\n      'Lyft is an on-demand transportation company based in San Francisco, California.',\n    imageUrl: '/images/products/product_4.png',\n    totalDownloads: '406',\n    createdAt: '04/04/2019'\n  },\n  {\n    id: uuid(),\n    title: 'GitHub',\n    description:\n      'GitHub is a web-based hosting service for version control of code using Git.',\n    imageUrl: '/images/products/product_5.png',\n    totalDownloads: '835',\n    createdAt: '04/04/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Squarespace',\n    description:\n      'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\n    imageUrl: '/images/products/product_6.png',\n    totalDownloads: '835',\n    createdAt: '04/04/2019'\n  }\n];\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { IconButton, Grid, Typography } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport { ProductsToolbar, ProductCard } from './components';\nimport mockData from './data';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  },\n  pagination: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst ProductList = () => {\n  const classes = useStyles();\n\n  const [products] = useState(mockData);\n\n  return (\n    <div className={classes.root}>\n      <ProductsToolbar />\n      <div className={classes.content}>\n        <Grid\n          container\n          spacing={3}\n        >\n          {products.map(product => (\n            <Grid\n              item\n              key={product.id}\n              lg={4}\n              md={6}\n              xs={12}\n            >\n              <ProductCard product={product} />\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n      <div className={classes.pagination}>\n        <Typography variant=\"caption\">1-6 of 20</Typography>\n        <IconButton>\n          <ChevronLeftIcon />\n        </IconButton>\n        <IconButton>\n          <ChevronRightIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Save\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button,\n  TextField\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Password = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            name=\"confirm\"\n            onChange={handleChange}\n            style={{ marginTop: '1rem' }}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Update\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport { Notifications, Password } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Settings = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        <Grid\n          item\n          md={7}\n          xs={12}\n        >\n          <Notifications />\n        </Grid>\n        <Grid\n          item\n          md={5}\n          xs={12}\n        >\n          <Password />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\n// Material components\nimport { SvgIcon } from '@material-ui/core';\n\nexport default function Facebook(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\n    </SvgIcon>\n  );\n}\n","import React from 'react';\n\n// Material components\nimport { SvgIcon } from '@material-ui/core';\n\nexport default function Google(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\n    </SvgIcon>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Grid,\n  Button,\n  IconButton,\n  TextField,\n  Link,\n  Typography\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true,\n    length: {\n      maximum: 64\n    }\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 128\n    }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  grid: {\n    height: '100%'\n  },\n  quoteContainer: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  quote: {\n    backgroundColor: theme.palette.neutral,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'url(/images/auth.jpg)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  quoteInner: {\n    textAlign: 'center',\n    flexBasis: '600px'\n  },\n  quoteText: {\n    color: theme.palette.white,\n    fontWeight: 300\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  bio: {\n    color: theme.palette.white\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    marginLeft: theme.spacing(4)\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center'\n    }\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(3)\n  },\n  socialButtons: {\n    marginTop: theme.spacing(3)\n  },\n  socialIcon: {\n    marginRight: theme.spacing(1)\n  },\n  sugestion: {\n    marginTop: theme.spacing(2)\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  signInButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst SignIn = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSignIn = event => {\n    event.preventDefault();\n    history.push('/');\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        className={classes.grid}\n        container\n      >\n        <Grid\n          className={classes.quoteContainer}\n          item\n          lg={5}\n        >\n          <div className={classes.quote}>\n            <div className={classes.quoteInner}>\n              {/* <Typography\n                className={classes.quoteText}\n                variant=\"h1\"\n              >\n                Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\n                they sold out High Life.\n              </Typography> */}\n              <div className={classes.person}>\n                {/* <Typography\n                  className={classes.name}\n                  variant=\"body1\"\n                >\n                  Takamaru Ayako\n                </Typography>\n                <Typography\n                  className={classes.bio}\n                  variant=\"body2\"\n                >\n                  Manager at inVision\n                </Typography> */}\n              </div>\n            </div>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.content}\n          item\n          lg={7}\n          xs={12}\n        >\n          <div className={classes.content}>\n            <div className={classes.contentHeader}>\n              <IconButton onClick={handleBack}>\n                <ArrowBackIcon />\n              </IconButton>\n            </div>\n            <div className={classes.contentBody}>\n              <form\n                className={classes.form}\n                onSubmit={handleSignIn}\n              >\n                <Typography\n                  className={classes.title}\n                  variant=\"h2\"\n                >\n                  Sign in\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Sign in with social media\n                </Typography>\n                <Grid\n                  className={classes.socialButtons}\n                  container\n                  spacing={2}\n                >\n                  <Grid item>\n                    <Button\n                      color=\"primary\"\n                      onClick={handleSignIn}\n                      size=\"large\"\n                      variant=\"contained\"\n                    >\n                      <FacebookIcon className={classes.socialIcon} />\n                      Login with Facebook\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      onClick={handleSignIn}\n                      size=\"large\"\n                      variant=\"contained\"\n                    >\n                      <GoogleIcon className={classes.socialIcon} />\n                      Login with Google\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Typography\n                  align=\"center\"\n                  className={classes.sugestion}\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  or login with email address\n                </Typography>\n                <TextField\n                  className={classes.textField}\n                  error={hasError('email')}\n                  fullWidth\n                  helperText={\n                    hasError('email') ? formState.errors.email[0] : null\n                  }\n                  label=\"Email address\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={formState.values.email || ''}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className={classes.textField}\n                  error={hasError('password')}\n                  fullWidth\n                  helperText={\n                    hasError('password') ? formState.errors.password[0] : null\n                  }\n                  label=\"Password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={formState.values.password || ''}\n                  variant=\"outlined\"\n                />\n                <Button\n                  className={classes.signInButton}\n                  color=\"primary\"\n                  disabled={!formState.isValid}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Sign in now\n                </Button>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don't have an account?{' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/sign-up\"\n                    variant=\"h6\"\n                  >\n                    Sign up\n                  </Link>\n                </Typography>\n              </form>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(SignIn);\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Grid,\n  Button,\n  IconButton,\n  TextField,\n  Link,\n  FormHelperText,\n  Checkbox,\n  Typography\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst schema = {\n  firstName: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 32\n    }\n  },\n  lastName: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 32\n    }\n  },\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true,\n    length: {\n      maximum: 64\n    }\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 128\n    }\n  },\n  policy: {\n    presence: { allowEmpty: false, message: 'is required' },\n    checked: true\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  grid: {\n    height: '100%'\n  },\n  quoteContainer: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  quote: {\n    backgroundColor: theme.palette.neutral,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'url(/images/auth.jpg)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  quoteInner: {\n    textAlign: 'center',\n    flexBasis: '600px'\n  },\n  quoteText: {\n    color: theme.palette.white,\n    fontWeight: 300\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  bio: {\n    color: theme.palette.white\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    marginLeft: theme.spacing(4)\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center'\n    }\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  policy: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  policyCheckbox: {\n    marginLeft: '-14px'\n  },\n  signUpButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst SignUp = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleSignUp = event => {\n    event.preventDefault();\n    history.push('/');\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        className={classes.grid}\n        container\n      >\n        <Grid\n          className={classes.quoteContainer}\n          item\n          lg={5}\n        >\n          <div className={classes.quote}>\n            <div className={classes.quoteInner}>\n              {/* <Typography\n                className={classes.quoteText}\n                variant=\"h1\"\n              >\n                Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\n                they sold out High Life.\n              </Typography> */}\n              <div className={classes.person}>\n                {/* <Typography\n                  className={classes.name}\n                  variant=\"body1\"\n                >\n                  Takamaru Ayako\n                </Typography>\n                <Typography\n                  className={classes.bio}\n                  variant=\"body2\"\n                >\n                  Manager at inVision\n                </Typography> */}\n              </div>\n            </div>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.content}\n          item\n          lg={7}\n          xs={12}\n        >\n          <div className={classes.content}>\n            <div className={classes.contentHeader}>\n              <IconButton onClick={handleBack}>\n                <ArrowBackIcon />\n              </IconButton>\n            </div>\n            <div className={classes.contentBody}>\n              <form\n                className={classes.form}\n                onSubmit={handleSignUp}\n              >\n                <Typography\n                  className={classes.title}\n                  variant=\"h2\"\n                >\n                  Create new account\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Use your email to create new account\n                </Typography>\n                <TextField\n                  className={classes.textField}\n                  error={hasError('firstName')}\n                  fullWidth\n                  helperText={\n                    hasError('firstName') ? formState.errors.firstName[0] : null\n                  }\n                  label=\"First name\"\n                  name=\"firstName\"\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={formState.values.firstName || ''}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className={classes.textField}\n                  error={hasError('lastName')}\n                  fullWidth\n                  helperText={\n                    hasError('lastName') ? formState.errors.lastName[0] : null\n                  }\n                  label=\"Last name\"\n                  name=\"lastName\"\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={formState.values.lastName || ''}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className={classes.textField}\n                  error={hasError('email')}\n                  fullWidth\n                  helperText={\n                    hasError('email') ? formState.errors.email[0] : null\n                  }\n                  label=\"Email address\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={formState.values.email || ''}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className={classes.textField}\n                  error={hasError('password')}\n                  fullWidth\n                  helperText={\n                    hasError('password') ? formState.errors.password[0] : null\n                  }\n                  label=\"Password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={formState.values.password || ''}\n                  variant=\"outlined\"\n                />\n                <div className={classes.policy}>\n                  <Checkbox\n                    checked={formState.values.policy || false}\n                    className={classes.policyCheckbox}\n                    color=\"primary\"\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    className={classes.policyText}\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the{' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </div>\n                {hasError('policy') && (\n                  <FormHelperText error>\n                    {formState.errors.policy[0]}\n                  </FormHelperText>\n                )}\n                <Button\n                  className={classes.signUpButton}\n                  color=\"primary\"\n                  disabled={!formState.isValid}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Sign up now\n                </Button>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?{' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/sign-in\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(SignUp);\n","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography as MuiTypography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst variants = {\n  h1: 'Nisi euismod ante senectus consequat phasellus ut',\n  h2: 'Nisi euismod ante senectus consequat phasellus ut',\n  h3: 'Nisi euismod ante senectus consequat phasellus ut',\n  h4: 'Nisi euismod ante senectus consequat phasellus ut',\n  h5: 'Nisi euismod ante senectus consequat phasellus ut',\n  h6: 'Nisi euismod ante senectus consequat phasellus ut',\n  subtitle1: 'Leo varius justo aptent arcu urna felis pede nisl',\n  subtitle2: 'Leo varius justo aptent arcu urna felis pede nisl',\n  body1:\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.Laoreet velit a fames commodo tristique hendrerit sociosqu rhoncus vel sapien penatibus facilisis faucibus ad. Mus purus vehicula imperdiet tempor lectus, feugiat Sapien erat viverra netus potenti mattis purus turpis. Interdum curabitur potenti tristique. Porta velit dignissim tristique ultrices primis.',\n  body2:\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.',\n  caption: 'Accumsan leo pretium conubia ullamcorper.',\n  overline: 'Accumsan leo pretium conubia ullamcorper.',\n  button: 'Vivamus ultrices rutrum fames dictumst'\n};\n\nconst Typography = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        {Object.keys(variants).map((key, i) => (\n          <Fragment key={i}>\n            <Grid\n              item\n              sm={3}\n              xs={12}\n            >\n              <MuiTypography variant=\"caption\">{key}</MuiTypography>\n            </Grid>\n            <Grid\n              item\n              sm={9}\n              xs={12}\n            >\n              <MuiTypography variant={key}>{variants[key]}</MuiTypography>\n            </Grid>\n          </Fragment>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Typography;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\n\nimport { getInitials } from 'helpers';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst UsersTable = props => {\n  const { className, users, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = event => {\n    const { users } = props;\n\n    let selectedUsers;\n\n    if (event.target.checked) {\n      selectedUsers = users.map(user => user.id);\n    } else {\n      selectedUsers = [];\n    }\n\n    setSelectedUsers(selectedUsers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedUsers.indexOf(id);\n    let newSelectedUsers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n    } else if (selectedIndex === selectedUsers.length - 1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUsers = newSelectedUsers.concat(\n        selectedUsers.slice(0, selectedIndex),\n        selectedUsers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedUsers(newSelectedUsers);\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedUsers.length === users.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedUsers.length > 0 &&\n                        selectedUsers.length < users.length\n                      }\n                      onChange={handleSelectAll}\n                    />\n                  </TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>Phone</TableCell>\n                  <TableCell>Registration date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.slice(0, rowsPerPage).map(user => (\n                  <TableRow\n                    className={classes.tableRow}\n                    hover\n                    key={user.id}\n                    selected={selectedUsers.indexOf(user.id) !== -1}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedUsers.indexOf(user.id) !== -1}\n                        color=\"primary\"\n                        onChange={event => handleSelectOne(event, user.id)}\n                        value=\"true\"\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.nameContainer}>\n                        <Avatar\n                          className={classes.avatar}\n                          src={user.avatarUrl}\n                        >\n                          {getInitials(user.name)}\n                        </Avatar>\n                        <Typography variant=\"body1\">{user.name}</Typography>\n                      </div>\n                    </TableCell>\n                    <TableCell>{user.email}</TableCell>\n                    <TableCell>\n                      {user.address.city}, {user.address.state},{' '}\n                      {user.address.country}\n                    </TableCell>\n                    <TableCell>{user.phone}</TableCell>\n                    <TableCell>\n                      {moment(user.createdAt).format('DD/MM/YYYY')}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <TablePagination\n          component=\"div\"\n          count={users.length}\n          onChangePage={handlePageChange}\n          onChangeRowsPerPage={handleRowsPerPageChange}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\n\nexport default UsersTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.row}>\n        <span className={classes.spacer} />\n        <Button className={classes.importButton}>Import</Button>\n        <Button className={classes.exportButton}>Export</Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add user\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Search user\"\n        />\n      </div>\n    </div>\n  );\n};\n\nUsersToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersToolbar;\n","import uuid from 'uuid/v1';\n\nexport default [\n  {\n    id: uuid(),\n    name: 'Ekaterina Tankova',\n    address: {\n      country: 'USA',\n      state: 'West Virginia',\n      city: 'Parkersburg',\n      street: '2849 Fulton Street'\n    },\n    email: 'ekaterina.tankova@devias.io',\n    phone: '304-428-3097',\n    avatarUrl: '/images/avatars/avatar_3.png',\n    createdAt: 1555016400000\n  },\n  {\n    id: uuid(),\n    name: 'Cao Yu',\n    address: {\n      country: 'USA',\n      state: 'Bristow',\n      city: 'Iowa',\n      street: '1865  Pleasant Hill Road'\n    },\n    email: 'cao.yu@devias.io',\n    avatarUrl: '/images/avatars/avatar_4.png',\n    phone: '712-351-5711',\n    createdAt: 1555016400000\n  },\n  {\n    id: uuid(),\n    name: 'Alexa Richardson',\n    address: {\n      country: 'USA',\n      state: 'Georgia',\n      city: 'Atlanta',\n      street: '4894  Lakeland Park Drive'\n    },\n    email: 'alexa.richardson@devias.io',\n    phone: '770-635-2682',\n    avatarUrl: '/images/avatars/avatar_2.png',\n    createdAt: 1555016400000\n  },\n  {\n    id: uuid(),\n    name: 'Anje Keizer',\n    address: {\n      country: 'USA',\n      state: 'Ohio',\n      city: 'Dover',\n      street: '4158  Hedge Street'\n    },\n    email: 'anje.keizer@devias.io',\n    avatarUrl: '/images/avatars/avatar_5.png',\n    phone: '908-691-3242',\n    createdAt: 1554930000000\n  },\n  {\n    id: uuid(),\n    name: 'Clarke Gillebert',\n    address: {\n      country: 'USA',\n      state: 'Texas',\n      city: 'Dallas',\n      street: '75247'\n    },\n    email: 'clarke.gillebert@devias.io',\n    phone: '972-333-4106',\n    avatarUrl: '/images/avatars/avatar_6.png',\n    createdAt: 1554757200000\n  },\n  {\n    id: uuid(),\n    name: 'Adam Denisov',\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Bakerfield',\n      street: '317 Angus Road'\n    },\n    email: 'adam.denisov@devias.io',\n    phone: '858-602-3409',\n    avatarUrl: '/images/avatars/avatar_1.png',\n    createdAt: 1554670800000\n  },\n  {\n    id: uuid(),\n    name: 'Ava Gregoraci',\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Redondo Beach',\n      street: '2188  Armbrester Drive'\n    },\n    email: 'ava.gregoraci@devias.io',\n    avatarUrl: '/images/avatars/avatar_7.png',\n    phone: '415-907-2647',\n    createdAt: 1554325200000\n  },\n  {\n    id: uuid(),\n    name: 'Emilee Simchenko',\n    address: {\n      country: 'USA',\n      state: 'Nevada',\n      city: 'Las Vegas',\n      street: '1798  Hickory Ridge Drive'\n    },\n    email: 'emilee.simchenko@devias.io',\n    phone: '702-661-1654',\n    avatarUrl: '/images/avatars/avatar_8.png',\n    createdAt: 1523048400000\n  },\n  {\n    id: uuid(),\n    name: 'Kwak Seong-Min',\n    address: {\n      country: 'USA',\n      state: 'Michigan',\n      city: 'Detroit',\n      street: '3934  Wildrose Lane'\n    },\n    email: 'kwak.seong.min@devias.io',\n    avatarUrl: '/images/avatars/avatar_9.png',\n    phone: '313-812-8947'\n  },\n  {\n    id: uuid(),\n    name: 'Merrile Burgett',\n    address: {\n      country: 'USA',\n      state: 'Utah',\n      city: 'Salt Lake City',\n      street: '368 Lamberts Branch Road'\n    },\n    email: 'merrile.burgett@devias.io',\n    phone: '801-301-7894',\n    avatarUrl: '/images/avatars/avatar_10.png',\n    createdAt: 1522702800000\n  }\n];\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { UsersToolbar, UsersTable } from './components';\nimport mockData from './data';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst UserList = () => {\n  const classes = useStyles();\n\n  const [users] = useState(mockData);\n\n  return (\n    <div className={classes.root}>\n      <UsersToolbar />\n      <div className={classes.content}>\n        <UsersTable users={users} />\n      </div>\n    </div>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& div .MuiDialogTitle-root': {\n      backgroundColor: '#FF276D'\n    }\n  },\n  texth2: {\n    '& h2.MuiTypography-root.MuiTypography-h6':{\n      color: 'white',\n      textAlign: 'center'\n    }\n  },\n  body: {\n    paddingTop: 20\n  }\n}));\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(props.size));\n  const classes = useStyles();\n  React.useEffect(() => {\n    console.log('in the useEffect');\n    if (props.open != open) {\n      handleClick(props.open);\n      console.log('opening..');\n    }\n  }, [props]);\n  const handleClick = open => {\n    setOpen(open);\n  };\n\n  //   const handleClose = () => {\n  //     setOpen(false);\n  //   };\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        className={classes.root}\n        fullWidth\n        onClose={props.handleCancel}\n        aria-labelledby=\"responsive-dialog-title\">\n        <DialogTitle id=\"responsive-dialog-title\" className={classes.texth2}>\n          {props.title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText className={classes.body}>\n            {props.body}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={props.handleCancel} color=\"primary\">\n            {props.cancelText}\n          </Button>\n          <Button onClick={props.handleOk} color=\"primary\" autoFocus>\n            {props.okText}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Model from 'components/Dialog/Dialog';\n\nlet AddEditUser = props => {\n  return (\n    <React.Fragment>\n      <Model\n        open={props.open}\n        title={'test'}\n        body={'test'}\n        okText={'Submit'}\n        cancelText={'Cancel'}\n        handleCancel={props.handleCancel}\n        handleOk={props.handleOk}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddEditUser;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { getInitials } from 'helpers';\nimport AddEditUser from '../Form/UserForm'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst UsersTable = props => {\n  const { className, users, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = event => {\n    const { users } = props;\n\n    let selectedUsers;\n\n    if (event.target.checked) {\n      selectedUsers = users.map(user => user.id);\n    } else {\n      selectedUsers = [];\n    }\n\n    setSelectedUsers(selectedUsers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedUsers.indexOf(id);\n    let newSelectedUsers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n    } else if (selectedIndex === selectedUsers.length - 1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUsers = newSelectedUsers.concat(\n        selectedUsers.slice(0, selectedIndex),\n        selectedUsers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedUsers(newSelectedUsers);\n  };\n\n  const handlePageChange = (event, pagee) => {\n    if (pagee < page) {\n      props.get();\n    } else {\n      props.get(props.users[props.users.length - 1].id);\n    }\n    setPage(pagee);\n    console.log(pagee);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <AddEditUser />\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>ID</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Phone</TableCell>\n                  <TableCell>Registration date</TableCell>\n                  {/* <TableCell>View</TableCell> */}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.length>0 && users.slice(0, rowsPerPage).map(user => (\n                  <TableRow\n                  className={classes.tableRow}\n                    hover\n                    key={user.id}\n                    \n                    // selected={selectedUsers.indexOf(user.id) !== -1}\n                  >\n                    <TableCell>\n                      <div className={classes.nameContainer}>\n                        <Typography variant=\"body1\">{user.id}</Typography>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.nameContainer}>\n                        <Typography variant=\"body1\">{user.name}</Typography>\n                      </div>\n                    </TableCell>\n                    <TableCell>{user.email}</TableCell>\n                    {/* <TableCell>\n                      {user.location && user.location.lng}, {user.location && user.location.lat},\n                    </TableCell> */}\n                    <TableCell>{user.phone}</TableCell>\n                    <TableCell>\n                      {user.dateJoin && moment(user.dateJoin.toDate()).format('DD/MM/YYYY')}\n                    </TableCell>\n                    {/* <TableCell>\n                      <VisibilityIcon\n                        onClick={() => {\n                          console.log('here', user.id);\n                        }}\n                      />\n                     \n                    </TableCell> */}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <TablePagination\n          component=\"div\"\n          // count={users.length}\n          count={-1}\n          onChangePage={handlePageChange}\n          // onChangeRowsPerPage={handleRowsPerPageChange}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[10]}\n          />\n      </CardActions>\n    </Card>\n          </React.Fragment>\n  );\n};\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\n\nexport default UsersTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from 'components';\nimport AddEditUser from '../Form/UserForm';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { className, ...rest } = props;\n  const [value, setValue] = React.useState();\n  const [openForm, setOpenForm] = React.useState(false);\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <AddEditUser\n        open={openForm}\n        handleCancel={() => setOpenForm(false)}\n        handleOk={() => setOpenForm(false)}\n      />\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.row}>\n          <span className={classes.spacer} />\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              setOpenForm(true);\n            }}>\n            Add user\n          </Button> */}\n        </div>\n        <div className={classes.row}>\n          <SearchInput\n            className={classes.searchInput}\n            placeholder=\"Search user by Id, Email or name\"\n            onChange={e => {\n              setValue(e.target.value);\n              console.log(e.target.value);\n              props.get(undefined, e.target.value);\n            }}\n            value={value}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nUsersToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersToolbar;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { BackDrop } from 'components';\n\nimport { UsersToolbar, UsersTable } from './components';\n\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst UserList = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  React.useEffect(() => {\n    getCustomerData();\n  }, []);\n\n  const getCustomerData = async (page, search) => {\n    setOpen(true);\n    let datadb;\n    if (page != undefined) {\n      datadb = firebase\n        .firestore()\n        .collection('Users')\n        .limit(10)\n        .orderBy('id')\n        .startAt(page);\n    } else if(search!=undefined){\n      datadb = firebase\n        .firestore()\n        .collection('Users')\n        // .limit(2);\n      // .startAt(page == undefined ? 0 : page);\n    }else {\n      datadb = firebase\n        .firestore()\n        .collection('Users')\n        .limit(10);\n      // .startAt(page == undefined ? 0 : page);\n    }\n    let data = await datadb.get();\n    if (data) {\n      let arr = [];\n      data.forEach(doc => {\n        if (search != undefined) {\n          if (\n            doc\n              .data()\n              .name.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc\n              .data()\n              .email.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc.data().id.search(search) != -1\n          ) {\n            arr.push(doc.data());\n          }\n        } else {\n          arr.push(doc.data());\n        }\n      });\n      setUsers(arr);\n      setOpen(false);\n\n      console.log(arr);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {open && <BackDrop open={true} />}\n      <div className={classes.root}>\n        <UsersToolbar get={getCustomerData} />\n        <div className={classes.content}>\n          <UsersTable users={users} get={getCustomerData} />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default UserList;\n","var GOOGLE_API_KEY = 'AIzaSyCzBaqFAu7qaotJmUby7ZNCpVjbj78wMsw';\nvar emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nvar passRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\nvar numRegex = /^\\d+$/;\nvar firebaseConfig = {\n  apiKey: 'AIzaSyC5DricRSN4aYok_FI0IvRCyjq4vqnNnRw',\n  authDomain: 'fuelup-b28ac.firebaseapp.com',\n  databaseURL: 'https://fuelup-b28ac.firebaseio.com',\n  projectId: 'fuelup-b28ac',\n  storageBucket: 'fuelup-b28ac.appspot.com',\n  messagingSenderId: '949979550560',\n  appId: '1:949979550560:web:84d6f112e15699be818405'\n};\n\nlet randomId = () => {\n  let s4 = () => {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  };\n  return s4() + s4() + s4() + s4() + s4() + s4() + s4() + s4();\n};\n\nexport {\n  GOOGLE_API_KEY,\n  emailRegex,\n  passRegex,\n  numRegex,\n  firebaseConfig,\n  randomId\n};\n","import React from 'react';\nimport Model from 'components/Dialog/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport * as fn from '../../../../common/variables/constants';\nimport { BackDrop } from 'components';\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  },\n  TextField: {\n    minWidth: '100%'\n  }\n}));\n\nlet AddEditUser = props => {\n  const classes = useStyles();\n  const [gasName, setGasName] = React.useState('');\n  const [octRating, setOctRating] = React.useState('');\n  const [price, setprice] = React.useState('');\n  const [prices, setprices] = React.useState('');\n  const [zipCode, setZipCode] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  let clearForm = () => {\n    setGasName('');\n    setOctRating('');\n    setprice('');\n    setprices('');\n    setZipCode('');\n  };\n\n  React.useEffect(() => {\n    if (props.data != undefined) {\n      setGasName(props.data.gasName);\n      setOctRating(props.data.octaneRating);\n      setprice(props.data.price);\n      setprices(props.data.prices);\n      setZipCode(props.data.zipCode);\n    } else {\n      clearForm();\n    }\n  }, [props.data]);\n\n  return (\n    <React.Fragment>\n      {open && <BackDrop open={true} />}\n      <Model\n        className={classes.modal}\n        open={props.open}\n        title={'Add Price Comparison'}\n        handleOk={() => {\n          setOpen(true);\n          let randomId = '';\n          if (props.data == undefined) {\n            randomId = fn.randomId();\n          } else {\n            randomId = props.data.id;\n          }\n\n          firebase\n            .firestore()\n            .collection('Price')\n            .doc(randomId)\n            .set({\n              id: randomId,\n              gasName: gasName.toUpperCase(),\n              price: price,\n              prices: prices,\n              zipCode: zipCode,\n              octaneRating: octRating\n            })\n            .then(() => {\n              clearForm();\n              setOpen(false);\n\n              props.close();\n              props.get();\n            })\n            .catch(error => {\n              setOpen(false);\n              props.get();\n\n              console.error('Error writing document: ', error);\n              alert('An Error has Occured');\n            });\n        }}\n        handleCancel={() => {\n          clearForm();\n          props.close();\n        }}\n        okText={'Save'}\n        cancelText={'Cancel'}\n        body={\n          <React.Fragment>\n            <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Name of Gas\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  onChange={e => setGasName(e.target.value)}\n                  value={gasName}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Ocatne Rating\"\n                  size=\"small\"\n                  type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={octRating}\n                  onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              \n           \n              <Grid item xs={8}>\n                <TextField\n                  label=\"Normal Price\"\n                  size=\"small\"\n                  type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  onChange={e => setprice(e.target.value)}\n                  value={price}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Zip Code\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={zipCode}\n                  onChange={e => setZipCode(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Price at Zip Code\"\n                  type=\"number\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={prices}\n                  onChange={e => setprices(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddEditUser;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { getInitials } from 'helpers';\nimport AddEditUser from '../Form/UserForm';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst UsersTable = props => {\n  const { className, users, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [openForm, setOpenForm] = useState(false);\n\n  const handlePageChange = (event, pagee) => {\n    if (pagee < page) {\n      props.get();\n    } else {\n      props.get(props.users[props.users.length - 1].id);\n    }\n    setPage(pagee);\n    console.log(pagee);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <AddEditUser\n        open={openForm}\n        close={() => setOpenForm(false)}\n        data={selectedUsers}\n        get={() => props.get(undefined, undefined)}\n      />\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>View</TableCell>\n                    {/* <TableCell>ID</TableCell> */}\n                    <TableCell>Name</TableCell>\n                    <TableCell>Octane Rating</TableCell>\n                    <TableCell>Normal Price</TableCell>\n                    <TableCell>ZipCodes</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {users.length > 0 &&\n                    users.slice(0, rowsPerPage).map(user => (\n                      <TableRow\n                        className={classes.tableRow}\n                        hover\n                        key={user.id}\n\n                        // selected={selectedUsers.indexOf(user.id) !== -1}\n                      >\n                        <TableCell>\n                          <div\n                            style={{\n                              padding: 0,\n                              margin: 0,\n                              minWidth: 50\n                            }}>\n                            <VisibilityIcon\n                              onClick={() => {\n                                setSelectedUsers(user);\n                                setOpenForm(true);\n                                console.log('here', user.id);\n                              }}\n                            />\n                            <DeleteForeverIcon\n                              onClick={() => {\n                                firebase\n                                  .firestore()\n                                  .collection('Price')\n                                  .doc(user.id)\n                                  .delete();\n                                props.get(undefined, undefined);\n                              }}\n                            />\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className={classes.nameContainer}>\n                            <Typography variant=\"body1\">\n                              {user.gasName}\n                            </Typography>\n                          </div>\n                        </TableCell>\n                        <TableCell>{user.octaneRating}</TableCell>\n                        <TableCell>{user.price}</TableCell>\n                        <TableCell>{user.zipCodes}</TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            // count={users.length}\n            count={-1}\n            onChangePage={handlePageChange}\n            // onChangeRowsPerPage={handleRowsPerPageChange}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10]}\n          />\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\n\nexport default UsersTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from 'components';\nimport AddEditUser from '../Form/UserForm';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  button: {\n    '&.MuiButton-containedPrimary': {\n      backgroundColor: '#FF276D'\n    }\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { className, ...rest } = props;\n  const [value, setValue] = React.useState();\n  const [openForm, setOpenForm] = React.useState(false);\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <AddEditUser\n        open={openForm}\n        close={() => setOpenForm(false)}\n        get={()=>props.get(undefined, undefined)}\n\n      />\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.row}>\n          <span className={classes.spacer} />\n\n          <Button\n            color=\"primary\"\n            className={classes.button}\n            variant=\"contained\"\n            onClick={() => {\n              setOpenForm(true);\n            }}>\n            Add Comparison Price\n          </Button>\n        </div>\n        <div className={classes.row}>\n          <SearchInput\n            className={classes.searchInput}\n            placeholder=\"Search\"\n            onChange={e => {\n              setValue(e.target.value);\n              console.log(e.target.value);\n              props.get(undefined, e.target.value);\n            }}\n            value={value}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nUsersToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersToolbar;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { BackDrop } from 'components';\n\nimport { UsersToolbar, UsersTable } from './components';\n\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst UserList = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  React.useEffect(() => {\n    getCustomerData();\n  }, []);\n\n  const getCustomerData = async (page, search) => {\n    setOpen(true);\n    let datadb;\n    if (page != undefined) {\n      datadb = firebase\n        .firestore()\n        .collection('Price')\n        .limit(10)\n        .orderBy('id')\n        .startAt(page);\n    } else if (search != undefined) {\n      datadb = firebase.firestore().collection('Price');\n      // .limit(2);\n      // .startAt(page == undefined ? 0 : page);\n    } else {\n      datadb = firebase\n        .firestore()\n        .collection('Price')\n        .limit(10);\n      // .startAt(page == undefined ? 0 : page);\n    }\n    let data = await datadb.get();\n    if (data) {\n      let arr = [];\n      data.forEach(doc => {\n        if (search != undefined) {\n          if (\n            doc\n              .data()\n              .gasName.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc\n              .data()\n              .price.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc\n              .data()\n              .octaneRating.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc.data().id.search(search) != -1\n          ) {\n            arr.push(doc.data());\n          }\n        } else {\n          arr.push(doc.data());\n        }\n      });\n      setUsers(arr);\n      setOpen(false);\n\n      console.log(arr);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {open && <BackDrop open={true} />}\n      <div className={classes.root}>\n        <span\n          style={{ textAlign: 'center', padding: 10, fontFamily: 'Roboto' }}>\n          {'Price Comparison Setup'.toUpperCase()}\n        </span>\n        <UsersToolbar get={getCustomerData} />\n        <div className={classes.content}>\n          <UsersTable users={users} get={getCustomerData} />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\nimport Model from 'components/Dialog/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport * as fn from '../../../../common/variables/constants';\nimport { BackDrop } from 'components';\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  },\n  TextField: {\n    minWidth: '100%'\n  }\n}));\n\nlet AddEditUser = props => {\n  const classes = useStyles();\n  const [gasName, setGasName] = React.useState('');\n  const [octRating, setOctRating] = React.useState('');\n  const [fullPrice, setFullPrice] = React.useState('');\n  const [halfPrice, setHalfPrice] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [zipCode, setZipCode] = React.useState('');\n  const [isZip, setIsZip] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n\n  let clearForm = () => {\n    setGasName('');\n    setOctRating('');\n    setFullPrice('');\n    setHalfPrice('');\n    setDescription('');\n    setZipCode('');\n    setIsZip(true);\n  };\n\n  React.useEffect(() => {\n    if (props.data != undefined) {\n      setGasName(props.data.gasName);\n      setOctRating(props.data.octaneRating);\n      setFullPrice(props.data.fullPrice);\n      setHalfPrice(props.data.halfPrice);\n      setDescription(props.data.description);\n      setZipCode(props.data.zipCode);\n      setIsZip(props.data.zipCode == '' ? true : false);\n    } else {\n      clearForm();\n    }\n  }, [props.data]);\n\n  return (\n    <React.Fragment>\n      {open && <BackDrop open={true} />}\n      <Model\n        className={classes.modal}\n        open={props.open}\n        title={'Add Gas Tank'}\n        handleOk={() => {\n          setOpen(true);\n          let randomId = '';\n          if (props.data == undefined) {\n            randomId = fn.randomId();\n          } else {\n            randomId = props.data.id;\n          }\n\n          firebase\n            .firestore()\n            .collection('Gas')\n            .doc(randomId)\n            .set({\n              id: randomId,\n              gasName: gasName.toUpperCase(),\n              description: description,\n              fullPrice: fullPrice,\n              halfPrice: halfPrice,\n              zipCode: isZip ? '' : zipCode,\n              octaneRating: octRating\n            })\n            .then(() => {\n              clearForm();\n              setOpen(false);\n\n              props.close();\n              props.get();\n            })\n            .catch(error => {\n              setOpen(false);\n              props.get();\n\n              console.error('Error writing document: ', error);\n              alert('An Error has Occured');\n            });\n        }}\n        handleCancel={() => {\n          clearForm();\n          props.close();\n        }}\n        okText={'Save'}\n        cancelText={'Cancel'}\n        body={\n          <React.Fragment>\n            <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Name of Gas\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  onChange={e => setGasName(e.target.value)}\n                  value={gasName}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Ocatne Rating\"\n                  size=\"small\"\n                  type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={octRating}\n                  onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Switch\n                  checked={isZip}\n                  onChange={() => setIsZip(!isZip)}\n                  name=\"isZip\"\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\n                />\n                Genral Scenerio where zip code are not defined\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Description\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  onChange={e => setDescription(e.target.value)}\n                  value={description}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Zip Code\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  disabled={isZip}\n                  value={zipCode}\n                  onChange={e => setZipCode(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Price Per Gallon\"\n                  size=\"small\"\n                  type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  onChange={e => setFullPrice(e.target.value)}\n                  value={fullPrice}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Price Per Half Gallon\"\n                  type=\"number\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={halfPrice}\n                  onChange={e => setHalfPrice(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddEditUser;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { getInitials } from 'helpers';\nimport AddEditUser from '../Form/UserForm';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport * as firebase from 'firebase'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst UsersTable = props => {\n  const { className, users, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [openForm, setOpenForm] = useState(false);\n\n  const handlePageChange = (event, pagee) => {\n    if (pagee < page) {\n      props.get();\n    } else {\n      props.get(props.users[props.users.length - 1].id);\n    }\n    setPage(pagee);\n    console.log(pagee);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <AddEditUser\n        open={openForm}\n        close={() => setOpenForm(false)}\n        data={selectedUsers}\n        get={() => props.get(undefined, undefined)}\n      />\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>View</TableCell>\n                    {/* <TableCell>ID</TableCell> */}\n                    <TableCell>Name</TableCell>\n                    <TableCell>Zip Code</TableCell>\n                    <TableCell>Octane Rating</TableCell>\n                    <TableCell>Per Gallon Price</TableCell>\n                    <TableCell>Half Gallon Price</TableCell>\n                    <TableCell>Description</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {users.length > 0 &&\n                    users.slice(0, rowsPerPage).map(user => (\n                      <TableRow\n                        className={classes.tableRow}\n                        hover\n                        key={user.id}\n\n                        // selected={selectedUsers.indexOf(user.id) !== -1}\n                      >\n                        <TableCell>\n                          <div\n                            style={{\n                              padding: 0,\n                              margin: 0,\n                              minWidth: 50\n                            }}>\n                            <VisibilityIcon\n                              onClick={() => {\n                                setSelectedUsers(user);\n                                setOpenForm(true);\n                                console.log('here', user.id);\n                              }}\n                            />\n                            <DeleteForeverIcon\n                              onClick={() => {\n                                firebase\n                                  .firestore()\n                                  .collection('Gas')\n                                  .doc(user.id)\n                                  .delete();\n                                props.get(undefined, undefined);\n                              }}\n                            />\n                          </div>\n                        </TableCell>\n                        {/* <TableCell>\n                          <div className={classes.nameContainer}>\n                            <Typography variant=\"body1\">{user.id}</Typography>\n                          </div>\n                        </TableCell> */}\n                        <TableCell>\n                          <div className={classes.nameContainer}>\n                            <Typography variant=\"body1\">\n                              {user.gasName}\n                            </Typography>\n                          </div>\n                        </TableCell>\n                        <TableCell>{user.zipCode}</TableCell>\n                        <TableCell>{user.octaneRating}</TableCell>\n                        <TableCell>{user.fullPrice}</TableCell>\n                        <TableCell>{user.halfPrice}</TableCell>\n                        <TableCell>{user.description}</TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            // count={users.length}\n            count={-1}\n            onChangePage={handlePageChange}\n            // onChangeRowsPerPage={handleRowsPerPageChange}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10]}\n          />\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\n\nexport default UsersTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from 'components';\nimport AddEditUser from '../Form/UserForm';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  button: {\n    '&.MuiButton-containedPrimary': {\n      backgroundColor: '#FF276D'\n    }\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { className, ...rest } = props;\n  const [value, setValue] = React.useState();\n  const [openForm, setOpenForm] = React.useState(false);\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <AddEditUser\n        open={openForm}\n        close={() => setOpenForm(false)}\n        get={()=>props.get(undefined, undefined)}\n\n      />\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.row}>\n          <span className={classes.spacer} />\n\n          <Button\n            color=\"primary\"\n            className={classes.button}\n            variant=\"contained\"\n            onClick={() => {\n              setOpenForm(true);\n            }}>\n            Add Gas Tank\n          </Button>\n        </div>\n        <div className={classes.row}>\n          <SearchInput\n            className={classes.searchInput}\n            placeholder=\"Search Gas Tank\"\n            onChange={e => {\n              setValue(e.target.value);\n              console.log(e.target.value);\n              props.get(undefined, e.target.value);\n            }}\n            value={value}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nUsersToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersToolbar;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { BackDrop } from 'components';\n\nimport { UsersToolbar, UsersTable } from './components';\n\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst UserList = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  React.useEffect(() => {\n    getCustomerData();\n  }, []);\n\n  const getCustomerData = async (page, search) => {\n    setOpen(true);\n    let datadb;\n    if (page != undefined) {\n      datadb = firebase\n        .firestore()\n        .collection('Gas')\n        .limit(10)\n        .orderBy('id')\n        .startAt(page);\n    } else if (search != undefined) {\n      datadb = firebase.firestore().collection('Gas');\n      // .limit(2);\n      // .startAt(page == undefined ? 0 : page);\n    } else {\n      datadb = firebase\n        .firestore()\n        .collection('Gas')\n        .limit(10);\n      // .startAt(page == undefined ? 0 : page);\n    }\n    let data = await datadb.get();\n    if (data) {\n      let arr = [];\n      data.forEach(doc => {\n        if (search != undefined) {\n          if (\n            doc\n              .data()\n              .gasName.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc\n              .data()\n              .halfPrice.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc\n              .data()\n              .fullPrice.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc\n              .data()\n              .octaneRating.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc\n              .data()\n              .zipCode.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc.data().id.search(search) != -1\n          ) {\n            arr.push(doc.data());\n          }\n        } else {\n          arr.push(doc.data());\n        }\n      });\n      setUsers(arr);\n      setOpen(false);\n\n      console.log(arr);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {open && <BackDrop open={true} />}\n      <div className={classes.root}>\n        <span\n          style={{ textAlign: 'center', padding: 10, fontFamily: 'Roboto' }}>\n          {'Gas Tank Types & Pricing'.toUpperCase()}\n        </span>\n        <UsersToolbar get={getCustomerData} />\n        <div className={classes.content}>\n          <UsersTable users={users} get={getCustomerData} />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\nimport Model from 'components/Dialog/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport * as fn from '../../../../common/variables/constants';\nimport { BackDrop } from 'components';\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  },\n  TextField: {\n    minWidth: '100%'\n  }\n}));\n\nlet AddEditUser = props => {\n  const classes = useStyles();\n\n  const [price, setprice] = React.useState('');\n\n  const [zipCode, setZipCode] = React.useState('');\n  const [isZip, setIsZip] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n\n  let clearForm = () => {\n    setprice('');\n    setZipCode('');\n    setIsZip(true);\n  };\n\n  React.useEffect(() => {\n    if (props.data != undefined) {\n      setprice(props.data.price);\n      setZipCode(props.data.zipCode);\n      setIsZip(props.data.zipCode == '' ? true : false);\n    } else {\n      clearForm();\n    }\n  }, [props.data]);\n\n  return (\n    <React.Fragment>\n      {open && <BackDrop open={true} />}\n      <Model\n        className={classes.modal}\n        open={props.open}\n        title={'Add Service Fee'}\n        handleOk={() => {\n          setOpen(true);\n          let randomId = '';\n          if (props.data == undefined) {\n            randomId = fn.randomId();\n          } else {\n            randomId = props.data.id;\n          }\n\n          firebase\n            .firestore()\n            .collection('serviceCharges')\n            .doc(randomId)\n            .set({\n              id: randomId,\n              price: price,\n\n              zipCode: isZip ? '' : zipCode\n            })\n            .then(() => {\n              clearForm();\n              setOpen(false);\n\n              props.close();\n              props.get();\n            })\n            .catch(error => {\n              setOpen(false);\n              props.get();\n\n              console.error('Error writing document: ', error);\n              alert('An Error has Occured');\n            });\n        }}\n        handleCancel={() => {\n          clearForm();\n          props.close();\n        }}\n        okText={'Save'}\n        cancelText={'Cancel'}\n        body={\n          <React.Fragment>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Switch\n                  checked={isZip}\n                  onChange={() => setIsZip(!isZip)}\n                  name=\"isZip\"\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\n                />\n                Genral Scenerio where zip code are not defined\n              </Grid>\n\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Zip Code\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  disabled={isZip}\n                  value={zipCode}\n                  onChange={e => setZipCode(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Price (USD)\"\n                  size=\"small\"\n                  type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  onChange={e => setprice(e.target.value)}\n                  value={price}\n                  className={classes.TextField}\n                />\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddEditUser;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { getInitials } from 'helpers';\nimport AddEditUser from '../Form/UserForm';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport * as firebase from 'firebase'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst UsersTable = props => {\n  const { className, users, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [openForm, setOpenForm] = useState(false);\n\n  const handlePageChange = (event, pagee) => {\n    if (pagee < page) {\n      props.get();\n    } else {\n      props.get(props.users[props.users.length - 1].id);\n    }\n    setPage(pagee);\n    console.log(pagee);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <AddEditUser\n        open={openForm}\n        close={() => setOpenForm(false)}\n        data={selectedUsers}\n        get={() => props.get(undefined, undefined)}\n      />\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>View</TableCell>\n                    {/* <TableCell>ID</TableCell> */}\n                    <TableCell>Price</TableCell>\n                    <TableCell>Zip Code</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {users.length > 0 &&\n                    users.slice(0, rowsPerPage).map(user => (\n                      <TableRow\n                        className={classes.tableRow}\n                        hover\n                        key={user.id}\n\n                        // selected={selectedUsers.indexOf(user.id) !== -1}\n                      >\n                        <TableCell>\n                          <div\n                            style={{\n                              padding: 0,\n                              margin: 0,\n                              minWidth: 50\n                            }}>\n                            <VisibilityIcon\n                              onClick={() => {\n                                setSelectedUsers(user);\n                                setOpenForm(true);\n                                console.log('here', user.id);\n                              }}\n                            />\n                            <DeleteForeverIcon\n                              onClick={() => {\n                                firebase\n                                  .firestore()\n                                  .collection('serviceCharges')\n                                  .doc(user.id)\n                                  .delete();\n                                props.get(undefined, undefined);\n                              }}\n                            />\n                          </div>\n                        </TableCell>\n\n                        <TableCell>{user.price}</TableCell>\n                        <TableCell>{user.zipCode}</TableCell>\n                   \n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            // count={users.length}\n            count={-1}\n            onChangePage={handlePageChange}\n            // onChangeRowsPerPage={handleRowsPerPageChange}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10]}\n          />\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\n\nexport default UsersTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from 'components';\nimport AddEditUser from '../Form/UserForm';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  button: {\n    '&.MuiButton-containedPrimary': {\n      backgroundColor: '#FF276D'\n    }\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { className, ...rest } = props;\n  const [value, setValue] = React.useState();\n  const [openForm, setOpenForm] = React.useState(false);\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <AddEditUser\n        open={openForm}\n        close={() => setOpenForm(false)}\n        get={()=>props.get(undefined, undefined)}\n\n      />\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.row}>\n          <span className={classes.spacer} />\n\n          <Button\n            color=\"primary\"\n            className={classes.button}\n            variant=\"contained\"\n            onClick={() => {\n              setOpenForm(true);\n            }}>\n            Add Service Fee\n          </Button>\n        </div>\n        <div className={classes.row}>\n          {/* <SearchInput\n            className={classes.searchInput}\n            placeholder=\"Search Gas Tank\"\n            onChange={e => {\n              setValue(e.target.value);\n              console.log(e.target.value);\n              props.get(undefined, e.target.value);\n            }}\n            value={value}\n          /> */}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nUsersToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersToolbar;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { BackDrop } from 'components';\n\nimport { UsersToolbar, UsersTable } from './components';\n\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst UserList = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  React.useEffect(() => {\n    getCustomerData();\n  }, []);\n\n  const getCustomerData = async (page, search) => {\n    setOpen(true);\n    let datadb;\n    if (page != undefined) {\n      datadb = firebase\n        .firestore()\n        .collection('serviceCharges')\n        .limit(10)\n        .orderBy('id')\n        .startAt(page);\n    } else if (search != undefined) {\n      datadb = firebase.firestore().collection('serviceCharges');\n      // .limit(2);\n      // .startAt(page == undefined ? 0 : page);\n    } else {\n      datadb = firebase\n        .firestore()\n        .collection('serviceCharges')\n        .limit(10);\n      // .startAt(page == undefined ? 0 : page);\n    }\n    let data = await datadb.get();\n    if (data) {\n      let arr = [];\n      data.forEach(doc => {\n        if (search != undefined) {\n          if (\n            doc\n              .data()\n              .name.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc\n              .data()\n              .price.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc\n              .data()\n              .rating.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc.data().id.search(search) != -1\n          ) {\n            arr.push(doc.data());\n          }\n        } else {\n          arr.push(doc.data());\n        }\n      });\n      setUsers(arr);\n      setOpen(false);\n\n      console.log(arr);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {open && <BackDrop open={true} />}\n      <div className={classes.root}>\n        <span\n          style={{ textAlign: 'center', padding: 10, fontFamily: 'Roboto' }}>\n          {'Service Fee Setup'.toUpperCase()}\n        </span>\n        <UsersToolbar get={getCustomerData} />\n        <div className={classes.content}>\n          <UsersTable users={users} get={getCustomerData} />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\nimport Model from 'components/Dialog/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport * as fn from '../../../../common/variables/constants';\nimport { BackDrop } from 'components';\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  },\n  TextField: {\n    minWidth: '100%'\n  }\n}));\n\nlet AddEditUser = props => {\n  const classes = useStyles();\n\n  const [price, setprice] = React.useState('');\n\n  const [zipCode, setZipCode] = React.useState('');\n  const [isZip, setIsZip] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n\n  let clearForm = () => {\n    setprice('');\n    setZipCode('');\n    setIsZip(true);\n  };\n\n  React.useEffect(() => {\n    if (props.data != undefined) {\n      setprice(props.data.price);\n      setZipCode(props.data.zipCode);\n      setIsZip(props.data.zipCode == '' ? true : false);\n    } else {\n      clearForm();\n    }\n  }, [props.data]);\n\n  return (\n    <React.Fragment>\n      {open && <BackDrop open={true} />}\n      <Model\n        className={classes.modal}\n        open={props.open}\n        title={'Add Delivery Fee'}\n        handleOk={() => {\n          setOpen(true);\n          let randomId = '';\n          if (props.data == undefined) {\n            randomId = fn.randomId();\n          } else {\n            randomId = props.data.id;\n          }\n\n          firebase\n            .firestore()\n            .collection('DeliveryFee')\n            .doc(randomId)\n            .set({\n              id: randomId,\n              price: price,\n              zipCode: isZip ? '' : zipCode\n            })\n            .then(() => {\n              clearForm();\n              setOpen(false);\n\n              props.close();\n              props.get();\n            })\n            .catch(error => {\n              setOpen(false);\n              props.get();\n\n              console.error('Error writing document: ', error);\n              alert('An Error has Occured');\n            });\n        }}\n        handleCancel={() => {\n          clearForm();\n          props.close();\n        }}\n        okText={'Save'}\n        cancelText={'Cancel'}\n        body={\n          <React.Fragment>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Switch\n                  checked={isZip}\n                  onChange={() => setIsZip(!isZip)}\n                  name=\"isZip\"\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\n                />\n                Genral Scenerio where zip code are not defined\n              </Grid>\n\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Zip Code\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  disabled={isZip}\n                  value={zipCode}\n                  onChange={e => setZipCode(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Price (USD)\"\n                  size=\"small\"\n                  type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  onChange={e => setprice(e.target.value)}\n                  value={price}\n                  className={classes.TextField}\n                />\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddEditUser;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { getInitials } from 'helpers';\nimport AddEditUser from '../Form/UserForm';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst UsersTable = props => {\n  const { className, users, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [openForm, setOpenForm] = useState(false);\n\n  const handlePageChange = (event, pagee) => {\n    if (pagee < page) {\n      props.get();\n    } else {\n      props.get(props.users[props.users.length - 1].id);\n    }\n    setPage(pagee);\n    console.log(pagee);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <AddEditUser\n        open={openForm}\n        close={() => setOpenForm(false)}\n        data={selectedUsers}\n        get={() => props.get(undefined, undefined)}\n      />\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>View</TableCell>\n                    {/* <TableCell>ID</TableCell> */}\n                    <TableCell>Zip Code</TableCell>\n                    <TableCell>Price(USD)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {users.length > 0 &&\n                    users.slice(0, rowsPerPage).map(user => (\n                      <TableRow\n                        className={classes.tableRow}\n                        hover\n                        key={user.id}\n\n                        // selected={selectedUsers.indexOf(user.id) !== -1}\n                      >\n                        <TableCell>\n                          <div\n                            style={{\n                              padding: 0,\n                              margin: 0,\n                              minWidth: 50\n                            }}>\n                            <VisibilityIcon\n                              onClick={() => {\n                                setSelectedUsers(user);\n                                setOpenForm(true);\n                                console.log('here', user.id);\n                              }}\n                            />\n                            <DeleteForeverIcon\n                              onClick={() => {\n                                firebase\n                                  .firestore()\n                                  .collection('DeliveryFee')\n                                  .doc(user.id)\n                                  .delete();\n                                props.get(undefined, undefined);\n                              }}\n                            />\n                          </div>\n                        </TableCell>\n\n                        <TableCell>{user.zipCode}</TableCell>\n                        <TableCell>{user.price}</TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            // count={users.length}\n            count={-1}\n            onChangePage={handlePageChange}\n            // onChangeRowsPerPage={handleRowsPerPageChange}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10]}\n          />\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\n\nexport default UsersTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from 'components';\nimport AddEditUser from '../Form/UserForm';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  button: {\n    '&.MuiButton-containedPrimary': {\n      backgroundColor: '#FF276D'\n    }\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { className, ...rest } = props;\n  const [value, setValue] = React.useState();\n  const [openForm, setOpenForm] = React.useState(false);\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <AddEditUser\n        open={openForm}\n        close={() => setOpenForm(false)}\n        get={()=>props.get(undefined, undefined)}\n\n      />\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.row}>\n          <span className={classes.spacer} />\n\n          <Button\n            color=\"primary\"\n            className={classes.button}\n            variant=\"contained\"\n            onClick={() => {\n              setOpenForm(true);\n            }}>\n            Add Delivery Fee\n          </Button>\n        </div>\n        <div className={classes.row}>\n          {/* <SearchInput\n            className={classes.searchInput}\n            placeholder=\"Search Gas Tank\"\n            onChange={e => {\n              setValue(e.target.value);\n              console.log(e.target.value);\n              props.get(undefined, e.target.value);\n            }}\n            value={value}\n          /> */}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nUsersToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersToolbar;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { BackDrop } from 'components';\n\nimport { UsersToolbar, UsersTable } from './components';\n\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst UserList = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  React.useEffect(() => {\n    getCustomerData();\n  }, []);\n\n  const getCustomerData = async (page, search) => {\n    setOpen(true);\n    let datadb;\n    if (page != undefined) {\n      datadb = firebase\n        .firestore()\n        .collection('DeliveryFee')\n        .limit(10)\n        .orderBy('id')\n        .startAt(page);\n    } else if (search != undefined) {\n      datadb = firebase.firestore().collection('DeliveryFee');\n      // .limit(2);\n      // .startAt(page == undefined ? 0 : page);\n    } else {\n      datadb = firebase\n        .firestore()\n        .collection('DeliveryFee')\n        .limit(10);\n      // .startAt(page == undefined ? 0 : page);\n    }\n    let data = await datadb.get();\n    if (data) {\n      let arr = [];\n      data.forEach(doc => {\n        if (search != undefined) {\n          if (\n            doc\n              .data()\n              .name.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc\n              .data()\n              .price.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc\n              .data()\n              .rating.toLowerCase()\n              .search(search.toLowerCase()) != -1 ||\n            doc.data().id.search(search) != -1\n          ) {\n            arr.push(doc.data());\n          }\n        } else {\n          arr.push(doc.data());\n        }\n      });\n      setUsers(arr);\n      setOpen(false);\n\n      console.log(arr);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {open && <BackDrop open={true} />}\n      <div className={classes.root}>\n        <span\n          style={{ textAlign: 'center', padding: 10, fontFamily: 'Roboto' }}>\n          {'Delivery Fee Setup'.toUpperCase()}\n        </span>\n        <UsersToolbar get={getCustomerData} />\n        <div className={classes.content}>\n          <UsersTable users={users} get={getCustomerData} />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\nimport Model from 'components/Dialog/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport * as fn from '../../../../common/variables/constants';\nimport { BackDrop } from 'components';\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  },\n  TextField: {\n    minWidth: '100%'\n  }\n}));\n\nlet AddEditUser = props => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  console.log(props);\n  return (\n    <React.Fragment>\n      {open && <BackDrop open={true} />}\n      <Model\n        className={classes.modal}\n        open={props.open}\n        title={'Order Details'}\n        // size={'lg'}\n        handleOk={async () => {\n          setOpen(true);\n          await firebase\n            .firestore()\n            .collection('Orders')\n            .doc(props.data.id)\n            .update({\n              status: 'completed'\n            });\n          props.get();\n\n          setOpen(false);\n          props.close();\n\n        }}\n        handleCancel={() => {\n          props.close();\n        }}\n        okText={'Mark Order Complete'}\n        cancelText={'Back'}\n        body={\n          <React.Fragment>\n            <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Order Status\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  // onChange={e => setGasName(e.target.value)}\n                  value={props.data.status}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Order ID\"\n                  size=\"small\"\n                  // type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={props.data.id}\n                  // onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Order Amount\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  // onChange={e => setGasName(e.target.value)}\n                  value={props.data.totalAmount}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Order Address\"\n                  size=\"small\"\n                  // type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={props.data.orderDetails.FormattedAddress.format}\n                  // onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Order Gas Detail\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  // onChange={e => setGasName(e.target.value)}\n                  value={props.data.orderDetails.gasDetails.gasName}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Order Octance Rating\"\n                  size=\"small\"\n                  // type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={props.data.orderDetails.gasDetails.octaneRating}\n                  // onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Gas Type\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  // onChange={e => setGasName(e.target.value)}\n                  value={props.data.orderDetails.gasType}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Gas Amount\"\n                  size=\"small\"\n                  // type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={props.data.orderDetails.gasAmount}\n                  // onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Gas Price (Gallon)\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  // onChange={e => setGasName(e.target.value)}\n                  value={props.data.orderDetails.gasDetails.fullPrice}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Vehical Make\"\n                  size=\"small\"\n                  // type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={props.data.orderDetails.make}\n                  // onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Vehical Model\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  // onChange={e => setGasName(e.target.value)}\n                  value={props.data.orderDetails.model}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Vehical Year\"\n                  size=\"small\"\n                  // type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={props.data.orderDetails.year}\n                  // onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Vehical Color\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  // onChange={e => setGasName(e.target.value)}\n                  value={props.data.orderDetails.color}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Vehical Plate Number\"\n                  size=\"small\"\n                  // type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={props.data.orderDetails.plateNumber}\n                  // onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Date of Delivery\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  // onChange={e => setGasName(e.target.value)}\n                  value={props.data.orderDetails.deliveryDate}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Time start\"\n                  size=\"small\"\n                  // type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={props.data.orderDetails.timeStart}\n                  // onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Time End\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  // onChange={e => setGasName(e.target.value)}\n                  value={props.data.orderDetails.timeEnd}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Latitude\"\n                  size=\"small\"\n                  // type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={props.data.orderDetails.latitude}\n                  // onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Longitude\"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  // onChange={e => setGasName(e.target.value)}\n                  value={props.data.orderDetails.longitude}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Person Name\"\n                  size=\"small\"\n                  // type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={props.data.userDetail.name}\n                  // onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Person Phone \"\n                  size=\"small\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  // onChange={e => setGasName(e.target.value)}\n                  value={props.data.userDetail.phone}\n                  className={classes.TextField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Person Email\"\n                  size=\"small\"\n                  // type=\"number\"\n                  id=\"outlined-size-small\"\n                  variant=\"outlined\"\n                  value={props.data.userDetail.email}\n                  // onChange={e => setOctRating(e.target.value)}\n                  className={classes.TextField}\n                />\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddEditUser;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { getInitials } from 'helpers';\nimport AddEditUser from '../Form/UserForm';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport * as firebase from 'firebase'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst UsersTable = props => {\n  const { className, users, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedUsers, setSelectedUsers] = useState({});\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [openForm, setOpenForm] = useState(false);\n\n  const handlePageChange = (event, pagee) => {\n    if (pagee < page) {\n      props.get();\n    } else {\n      props.get(props.users[props.users.length - 1].id);\n    }\n    setPage(pagee);\n    console.log(pagee);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n     {openForm && <AddEditUser\n        open={openForm}\n        close={() => setOpenForm(false)}\n        data={selectedUsers}\n        get={() => props.get(undefined, undefined)}\n      />}\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>View</TableCell>\n                    {/* <TableCell>ID</TableCell> */}\n                    <TableCell>ID</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Octane Rating</TableCell>\n                    <TableCell>Total Amount</TableCell>\n                    <TableCell>Status</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {users.length > 0 &&\n                    users.slice(0, rowsPerPage).map(user => (\n                      <TableRow\n                        className={classes.tableRow}\n                        hover\n                        key={user.id}\n\n                        // selected={selectedUsers.indexOf(user.id) !== -1}\n                      >\n                        <TableCell>\n                          <div\n                            style={{\n                              padding: 0,\n                              margin: 0,\n                              minWidth: 50\n                            }}>\n                            <VisibilityIcon\n                              onClick={() => {\n                                setSelectedUsers(user);\n                                setOpenForm(true);\n                                console.log('here', user.id);\n                              }}\n                            />\n                            {/* <DeleteForeverIcon\n                              onClick={() => {\n                                firebase\n                                  .firestore()\n                                  .collection('Orders')\n                                  .doc(user.id)\n                                  .delete();\n                                props.get(undefined, undefined);\n                              }}\n                            /> */}\n                          </div>\n                        </TableCell>\n                        {/* <TableCell>\n                          <div className={classes.nameContainer}>\n                            <Typography variant=\"body1\">{user.id}</Typography>\n                          </div>\n                        </TableCell> */}\n                        <TableCell>\n                          <div className={classes.nameContainer}>\n                            <Typography variant=\"body1\">\n                              {user.id}\n                            </Typography>\n                          </div>\n                        </TableCell>\n                        <TableCell>{user.userDetail.name}</TableCell>\n                        <TableCell>{user.orderDetails.gasDetails.octaneRating}</TableCell>\n                        <TableCell>{user.totalAmount}</TableCell>\n                        <TableCell>{user.status}</TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            // count={users.length}\n            count={-1}\n            onChangePage={handlePageChange}\n            // onChangeRowsPerPage={handleRowsPerPageChange}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10]}\n          />\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\n\nexport default UsersTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from 'components';\nimport AddEditUser from '../Form/UserForm';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  button: {\n    '&.MuiButton-containedPrimary': {\n      backgroundColor: '#FF276D'\n    }\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { className, ...rest } = props;\n  const [value, setValue] = React.useState();\n  const [openForm, setOpenForm] = React.useState(false);\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {/* <AddEditUser\n        open={openForm}\n        close={() => setOpenForm(false)}\n        get={()=>props.get(undefined, undefined)}\n\n      /> */}\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.row}>\n          <span className={classes.spacer} />\n\n          {/* <Button\n            color=\"primary\"\n            className={classes.button}\n            variant=\"contained\"\n            onClick={() => {\n              setOpenForm(true);\n            }}>\n            Add Gas Tank\n          </Button> */}\n        </div>\n        <div className={classes.row}>\n          <SearchInput\n            className={classes.searchInput}\n            placeholder=\"Search Order By ID\"\n            onChange={e => {\n              setValue(e.target.value);\n              console.log(e.target.value);\n              props.get(undefined, e.target.value);\n            }}\n            value={value}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nUsersToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersToolbar;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { BackDrop } from 'components';\n\nimport { UsersToolbar, UsersTable } from './components';\n\nimport * as firebase from 'firebase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst UserList = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  React.useEffect(() => {\n    getCustomerData();\n  }, []);\n\n  const getCustomerData = async (page, search) => {\n    setOpen(true);\n    let datadb;\n    if (page != undefined) {\n      datadb = firebase\n        .firestore()\n        .collection('Orders')\n        .limit(10)\n        .orderBy('id')\n        .startAt(page);\n    } else if (search != undefined) {\n      datadb = firebase.firestore().collection('Orders');\n      // .limit(2);\n      // .startAt(page == undefined ? 0 : page);\n    } else {\n      datadb = firebase\n        .firestore()\n        .collection('Orders')\n        .limit(10);\n      // .startAt(page == undefined ? 0 : page);\n    }\n    let data = await datadb.get();\n    if (data) {\n      let arr = [];\n      data.forEach(doc => {\n        if (search != undefined) {\n          if (\n            // doc\n            //   .data()\n            //   .name.toLowerCase()\n            //   .search(search.toLowerCase()) != -1 ||\n            // doc\n            //   .data()\n            //   .price.toLowerCase()\n            //   .search(search.toLowerCase()) != -1 ||\n            // doc\n            //   .data()\n            //   .rating.toLowerCase()\n            //   .search(search.toLowerCase()) != -1 ||\n            doc.data().id.search(search) != -1\n          ) {\n            arr.push(doc.data());\n          }\n        } else {\n          arr.push(doc.data());\n        }\n      });\n      setUsers(arr);\n      setOpen(false);\n\n      console.log(arr);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {open && <BackDrop open={true} />}\n      <div className={classes.root}>\n        <span\n          style={{ textAlign: 'center', padding: 10, fontFamily: 'Roboto' }}>\n          {'Orders Management'.toUpperCase()}\n        </span>\n        <UsersToolbar get={getCustomerData} />\n        <div className={classes.content}>\n          <UsersTable users={users} get={getCustomerData} />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\n\nimport { RouteWithLayout } from './components';\nimport { Main as MainLayout, Minimal as MinimalLayout } from './layouts';\n\nimport {\n  Dashboard as DashboardView,\n  ProductList as ProductListView,\n  UserList as UserListView,\n  Typography as TypographyView,\n  Icons as IconsView,\n  Account as AccountView,\n  Settings as SettingsView,\n  SignUp as SignUpView,\n  SignIn as SignInView,\n  NotFound as NotFoundView,\n\n  Customers as CustomerView,\n  ComparePrice as ComparePricesView,\n  GasTypes as GasTypesView,\n  DeliveryFee as DeliveryFeeView,\n  ServiceFee as ServiceFeeView,\n  Orders  as OrdersView,\n\n} from './views';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/dashboard\" />\n      <RouteWithLayout\n        component={DashboardView}\n        exact\n        layout={MainLayout}\n        path=\"/dashboard\"\n      />\n\n      {/* <RouteWithLayout\n        component={BoatRampView}\n        exact\n        layout={MainLayout}\n        path=\"/boat-ramps\"\n      /> */}\n\n      <RouteWithLayout\n        component={CustomerView}\n        exact\n        layout={MainLayout}\n        path=\"/customers\"\n      />\n       <RouteWithLayout\n        component={GasTypesView}\n        exact\n        layout={MainLayout}\n        path=\"/gas\"\n      />\n       <RouteWithLayout\n        component={OrdersView}\n        exact\n        layout={MainLayout}\n        path=\"/orders\"\n      />\n       <RouteWithLayout\n        component={ComparePricesView}\n        exact\n        layout={MainLayout}\n        path=\"/price\"\n      />\n       <RouteWithLayout\n        component={DeliveryFeeView}\n        exact\n        layout={MainLayout}\n        path=\"/delivery-fee\"\n      />\n       <RouteWithLayout\n        component={ServiceFeeView}\n        exact\n        layout={MainLayout}\n        path=\"/service-fee\"\n      />\n\n      {/* <RouteWithLayout\n        component={VesselView}\n        exact\n        layout={MainLayout}\n        path=\"/operators\"\n      />\n\n      <RouteWithLayout\n        component={UserListView}\n        exact\n        layout={MainLayout}\n        path=\"/users\"\n      />\n      <RouteWithLayout\n        component={ProductListView}\n        exact\n        layout={MainLayout}\n        path=\"/products\"\n      />\n      <RouteWithLayout\n        component={TypographyView}\n        exact\n        layout={MainLayout}\n        path=\"/typography\"\n      />\n      <RouteWithLayout\n        component={IconsView}\n        exact\n        layout={MainLayout}\n        path=\"/icons\"\n      />\n      \n      <RouteWithLayout\n        component={AccountView}\n        exact\n        layout={MainLayout}\n        path=\"/account\"\n      />\n      <RouteWithLayout\n        component={SettingsView}\n        exact\n        layout={MainLayout}\n        path=\"/settings\"\n      />\n      */}\n      <RouteWithLayout\n        component={SignUpView}\n        exact\n        layout={MinimalLayout}\n        path=\"/sign-up\"\n      />\n      <RouteWithLayout\n        component={SignInView}\n        exact\n        layout={MinimalLayout}\n        path=\"/sign-in\"\n      />\n      <RouteWithLayout\n        component={NotFoundView}\n        exact\n        layout={MinimalLayout}\n        path=\"/not-found\"\n      />\n      <Redirect to=\"/not-found\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { Chart } from 'react-chartjs-2';\nimport { ThemeProvider } from '@material-ui/styles';\nimport validate from 'validate.js';\n\nimport { chartjs } from './helpers';\nimport theme from './theme';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './assets/scss/index.scss';\nimport validators from './common/validators';\nimport Routes from './Routes';\nimport * as firebase from 'firebase';\nimport { firebaseConfig } from './common/variables/constants';\n\n\nconst browserHistory = createBrowserHistory();\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw: chartjs.draw\n});\n\nvalidate.validators = {\n  ...validate.validators,\n  ...validators\n};\n\nexport default class App extends Component {\n  componentDidMount() {\n    firebase.initializeApp(firebaseConfig);\n    // this.notify();\n  }\n  // notify = async () => {\n  //   var audio = new Audio(require('./assets/notification.mp3'));\n  //   const messaging = firebase.messaging();\n\n  //   await Notification.requestPermission();\n\n  //   messaging\n  //     .getToken()\n  //     .then(currentToken => {\n  //       if (currentToken) {\n  //         console.log(currentToken);\n\n  //         // sendTokenToServer(currentToken);\n  //         // updateUIForPushEnabled(currentToken);\n  //       } else {\n  //         // Show permission request.\n  //         console.log(\n  //           'No Instance ID token available. Request permission to generate one.'\n  //         );\n  //         // Show permission UI.\n  //         // updateUIForPushPermissionRequired();\n  //         // setTokenSentToServer(false);\n  //       }\n  //     })\n  //     .catch(err => {\n  //       console.log('An error occurred while retrieving token. ', err);\n  //       // showToken('Error retrieving Instance ID token. ', err);\n  //       // setTokenSentToServer(false);\n  //     });\n\n  //   messaging.onMessage(payload => {\n  //     console.log('App.js', payload);\n  //     audio.play();\n  //   });\n\n  //   messaging.onTokenRefresh(newToken => {\n  //     messaging\n  //     .getToken()\n  //     .then(currentToken => {\n  //       if (currentToken) {\n  //         console.log(currentToken);\n\n  //         // sendTokenToServer(currentToken);\n  //         // updateUIForPushEnabled(currentToken);\n  //       } else {\n  //         // Show permission request.\n  //         console.log(\n  //           'No Instance ID token available. Request permission to generate one.'\n  //         );\n  //         // Show permission UI.\n  //         // updateUIForPushPermissionRequired();\n  //         // setTokenSentToServer(false);\n  //       }\n  //     })\n  //     .catch(err => {\n  //       console.log('An error occurred while retrieving token. ', err);\n  //       // showToken('Error retrieving Instance ID token. ', err);\n  //       // setTokenSentToServer(false);\n  //     });\n  //   });\n  //   // messaging.setBackgroundMessageHandler(payload => {\n  //   //   console.log('App.js', payload);\n  //   //   audio.play();\n  //   // });\n  // };\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Router history={browserHistory}>\n          <Routes />\n        </Router>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\nserviceWorker.registerServiceWorker()\n"],"sourceRoot":""}